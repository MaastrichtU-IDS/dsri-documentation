"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4062],{5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>d});var r=a(6540);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(a),d=o,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||n;return a?r.createElement(f,l(l({ref:t},c),{},{components:a})):r.createElement(f,l({ref:t},c))}));function d(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,l=new Array(n);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<n;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2489:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var r=a(9668),o=a(1367),n=(a(6540),a(5680)),l=["components"],i={id:"workflows-airflow",title:"Deploy Airflow"},s=void 0,p={unversionedId:"workflows-airflow",id:"workflows-airflow",title:"Deploy Airflow",description:"Deploy Apache Airflow to run workflows (aka. DAGs), hosted in a Git repository, on the DSRI.",source:"@site/docs/workflows-airflow.md",sourceDirName:".",slug:"/workflows-airflow",permalink:"/docs/workflows-airflow",draft:!1,editUrl:"https://github.com/MaastrichtU-IDS/dsri-documentation/edit/master/website/docs/workflows-airflow.md",tags:[],version:"current",lastUpdatedBy:"lwinckers",lastUpdatedAt:1759846089,formattedLastUpdatedAt:"Oct 7, 2025",frontMatter:{id:"workflows-airflow",title:"Deploy Airflow"},sidebar:"docs",previous:{title:"Deploy GitHub Runners",permalink:"/docs/workflows-github-actions"},next:{title:"Run Argo workflows",permalink:"/docs/workflows-argo"}},c={},m=[{value:"Install the chart",id:"install-the-chart",level:2},{value:"Deploy Airflow",id:"deploy-airflow",level:2},{value:"Example workflows",id:"example-workflows",level:2},{value:"Delete the chart",id:"delete-the-chart",level:2},{value:"See also",id:"see-also",level:2}],u={toc:m};function d(e){var t=e.components,a=(0,o.A)(e,l);return(0,n.yg)("wrapper",(0,r.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Deploy ",(0,n.yg)("a",{parentName:"p",href:"https://airflow.apache.org"},"Apache Airflow")," to run workflows (aka. DAGs), hosted in a Git repository, on the DSRI. "),(0,n.yg)("h2",{id:"install-the-chart"},"Install the chart"),(0,n.yg)("p",null,"You will need to have Helm installed on your computer to deploy a Helm chart, see the ",(0,n.yg)("a",{parentName:"p",href:"/docs/helm"},"Helm docs")," for more details."),(0,n.yg)("p",null,"Install the Helm chart to be able to deploy Airflow on the DSRI:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"helm repo add apache-airflow https://airflow.apache.org\nhelm repo update\n")),(0,n.yg)("h2",{id:"deploy-airflow"},"Deploy Airflow"),(0,n.yg)("p",null,"You can quickly deploy Airflow on the DSRI, with DAGs automatically synchronized with your Git repository. "),(0,n.yg)("p",null,"We use a ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/MaastrichtU-IDS/dsri-documentation/blob/master/applications/airflow/values.yml"},(0,n.yg)("inlineCode",{parentName:"a"},"values.yml")," file")," with all default parameters pre-defined for the DSRI, so you just need to edit the password and git repository configuration in this command, and run it:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"helm install airflow apache-airflow/airflow \\\n    -f https://raw.githubusercontent.com/MaastrichtU-IDS/dsri-documentation/master/applications/airflow/values.yml \\\n    --set webserver.defaultUser.password=yourpassword \\\n    --set dags.gitSync.repo=https://github.com/bio2kg/bio2kg-etl.git \\\n    --set dags.gitSync.branch=main \\\n    --set dags.gitSync.subPath=workflows/dags\n")),(0,n.yg)("admonition",{type:"info"},(0,n.yg)("p",{parentName:"admonition"},"If you need to do more configuration you can download the a ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/MaastrichtU-IDS/dsri-documentation/blob/master/applications/airflow/values.yml"},(0,n.yg)("inlineCode",{parentName:"a"},"values.yml")," file"),", edit it directly to your settings and use this file locally with ",(0,n.yg)("inlineCode",{parentName:"p"},"-f values.yml"))),(0,n.yg)("p",null,"A few seconds after Airflow started to install, you will need to fix the postgresql deployment in a different terminal window (unfortunately setting the ",(0,n.yg)("inlineCode",{parentName:"p"},"serviceAccount.name")," of the sub chart ",(0,n.yg)("inlineCode",{parentName:"p"},"postgresql")," don't work, even if it should be possible according to the ",(0,n.yg)("a",{parentName:"p",href:"https://helm.sh/docs/chart_template_guide/subcharts_and_globals/"},"official helm docs"),"). Run this command to fix postgresql:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},'oc patch statefulset/airflow-postgresql --patch \'{"spec":{"template":{"spec": {"serviceAccountName": "anyuid"}}}}\'\n')),(0,n.yg)("p",null,"Once Airflow finished to deploy, you can access its web interface temporarily by forwarding the webserver on your machine at http://localhost:8080"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"oc port-forward svc/airflow-webserver 8080:8080\n")),(0,n.yg)("p",null,"Or permanently expose the interface on a URL accessible when logged to the UM VPN, with HTTPS enabled:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},'oc expose svc/airflow-webserver\noc patch route/airflow-webserver --patch \'{"spec":{"tls": {"termination": "edge", "insecureEdgeTerminationPolicy": "Redirect"}}}\'\n')),(0,n.yg)("p",null,"Finally, get the route to the Airflow web interface, or access it via the DSRI web UI:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"oc get routes\n")),(0,n.yg)("h2",{id:"example-workflows"},"Example workflows"),(0,n.yg)("p",null,"You can find example DAGs for bash operator, python operator and Kubernetes pod operator ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/MaastrichtU-IDS/dsri-documentation/tree/master/applications/airflow/dags"},"here"),"."),(0,n.yg)("p",null,"Here an example of a DAG using the Kubernetes pod operator to run tasks as pods, you will need to change the ",(0,n.yg)("inlineCode",{parentName:"p"},"namespace")," parameter to your DSRI project where Airflow is deployed:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-python"},"from airflow import DAG\nfrom datetime import datetime, timedelta\nfrom airflow.contrib.operators.kubernetes_pod_operator import KubernetesPodOperator\nfrom airflow.operators.dummy_operator import DummyOperator\n\ndefault_args = {\n    'owner': 'airflow',\n    'depends_on_past': False,\n    'start_date': datetime.utcnow(),\n    'email': ['airflow@example.com'],\n    'email_on_failure': False,\n    'email_on_retry': False,\n    'retries': 1,\n    'retry_delay': timedelta(minutes=5)\n}\ndag = DAG(\n    'kubernetes_pod_operator',\n    default_args=default_args, \n    schedule_interval=None\n    # schedule_interval=timedelta(minutes=10)\n)\n\nstart = DummyOperator(task_id='run_this_first', dag=dag)\n\npassing = KubernetesPodOperator(\n    namespace='CHANGEME',\n    image=\"python:3.6\",\n    cmds=[\"python\",\"-c\"],\n    arguments=[\"print('hello world')\"],\n    labels={\"app\": \"airflow\"},\n    name=\"passing-test\",\n    task_id=\"passing-task\",\n    get_logs=True,\n    dag=dag\n)\n\npassing.set_upstream(start)\n")),(0,n.yg)("h2",{id:"delete-the-chart"},"Delete the chart"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"helm uninstall airflow\n")),(0,n.yg)("h2",{id:"see-also"},"See also"),(0,n.yg)("p",null,"Here are a few links for more details on the official Airflow Helm chart:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://airflow.apache.org/docs/helm-chart/stable/index.html"},"Helm chart docs")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/apache/airflow/tree/main/chart"},"Helm chart source code")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://airflow.apache.org/docs/helm-chart/stable/parameters-ref.html"},"Helm chart parameters"))),(0,n.yg)("p",null,"Other ways to deploy Airflow on OpenShift:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/airflow-helm/charts/tree/main/charts/airflow"},"Community Helm chart GitHub repo")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/CSCfi/airflow-openshift"},"Airflow template for OpenShift"))))}d.isMDXComponent=!0}}]);