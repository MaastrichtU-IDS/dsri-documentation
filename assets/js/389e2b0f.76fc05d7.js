"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9937],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=n.createContext({}),d=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=d(a),u=o,k=m["".concat(i,".").concat(u)]||m[u]||s[u]||r;return a?n.createElement(k,l(l({ref:t},c),{},{components:a})):n.createElement(k,l({ref:t},c))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,l=new Array(r);l[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var d=2;d<r;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2745:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>p,metadata:()=>d,toc:()=>s});var n=a(3117),o=a(102),r=(a(7294),a(3905)),l=["components"],p={id:"openshift-commands",title:"Command Line Interface"},i=void 0,d={unversionedId:"openshift-commands",id:"openshift-commands",title:"Command Line Interface",description:"Overview",source:"@site/docs/openshift-commands.md",sourceDirName:".",slug:"/openshift-commands",permalink:"/docs/openshift-commands",draft:!1,editUrl:"https://github.com/MaastrichtU-IDS/dsri-documentation/edit/master/website/docs/openshift-commands.md",tags:[],version:"current",lastUpdatedBy:"Adekunle Onaopepo",lastUpdatedAt:1733158728,formattedLastUpdatedAt:"Dec 2, 2024",frontMatter:{id:"openshift-commands",title:"Command Line Interface"},sidebar:"docs",previous:{title:"Login to Docker registries",permalink:"/docs/login-docker-registry"},next:{title:"Data storage",permalink:"/docs/openshift-storage"}},c={},s=[{value:"Overview",id:"overview",level:2},{value:"Projects",id:"projects",level:2},{value:"List projects",id:"list-projects",level:3},{value:"Connect to project",id:"connect-to-project",level:3},{value:"ImageStreams",id:"imagestreams",level:2},{value:"Pods",id:"pods",level:2},{value:"Create pod from YAML",id:"create-pod-from-yaml",level:3},{value:"List pods",id:"list-pods",level:3},{value:"Get specific pod",id:"get-specific-pod",level:3},{value:"Remote Shell connection",id:"remote-shell-connection",level:3},{value:"Execute command in pod",id:"execute-command-in-pod",level:3},{value:"Delete pod",id:"delete-pod",level:3},{value:"Get pod logs",id:"get-pod-logs",level:3},{value:"Create app from template",id:"create-app-from-template",level:2},{value:"Copy files",id:"copy-files",level:3}],m={toc:s};function u(e){var t=e.components,a=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Here is an overview of common ",(0,r.kt)("inlineCode",{parentName:"p"},"oc")," commands:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Command")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"oc login --token=<token>")),(0,r.kt)("td",{parentName:"tr",align:null},"Login to the DSRI OpenShift cluster in your terminal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"oc get projects")),(0,r.kt)("td",{parentName:"tr",align:null},"List all available projects")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"oc project <project> ")),(0,r.kt)("td",{parentName:"tr",align:null},"Switch to project")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"oc get pods ")),(0,r.kt)("td",{parentName:"tr",align:null},"Get running pods (a pod can run one or multiple containers for your application)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"oc rsh <pod_name> <command>")),(0,r.kt)("td",{parentName:"tr",align:null},"Remote terminal connexion to a pod (Shell/Bash)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"oc cp <from> <to>")),(0,r.kt)("td",{parentName:"tr",align:null},"Copy files from host to container or vice versa, e.g. from host: ",(0,r.kt)("inlineCode",{parentName:"td"},"oc cp <local dir> <pod>:<pod_dir>")," or from to host: ",(0,r.kt)("inlineCode",{parentName:"td"},"oc cp <pod>:<pod_dir> <local dir>"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"oc rsync <from> <to>")),(0,r.kt)("td",{parentName:"tr",align:null},"Similar to rsync command on Linux to synchronize directories between container and host or the other way around")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"oc exec <pod_id> <folder_path>")),(0,r.kt)("td",{parentName:"tr",align:null},"Execute command in pods")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"oc delete pod <pod_id>")),(0,r.kt)("td",{parentName:"tr",align:null},"Delete pod")))),(0,r.kt)("h2",{id:"projects"},"Projects"),(0,r.kt)("h3",{id:"list-projects"},"List projects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"oc projects\n")),(0,r.kt)("h3",{id:"connect-to-project"},"Connect to project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"oc project my-project\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"imagestreams"},"ImageStreams"),(0,r.kt)("p",null,"To update an ImageStream in your project to pull the latest update from the external repository (e.g. from ghcr.io or DockerHub):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc import-image <imagestream-id>\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"pods"},"Pods"),(0,r.kt)("h3",{id:"create-pod-from-yaml"},"Create pod from YAML"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"oc create -f my-pod.yaml\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"E.g. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/argo/d2s-pod-virtuoso.yaml"},"d2s-pod-virtuoso.yaml"),".")),(0,r.kt)("h3",{id:"list-pods"},"List pods"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"oc get pod\n")),(0,r.kt)("p",null,"List running pods:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc get pods --field-selector=status.phase=Running\n")),(0,r.kt)("h3",{id:"get-specific-pod"},"Get specific pod"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"oc get pod | grep <pod_id>\n")),(0,r.kt)("p",null,"Using selector with Apache Flink as example, and showing only the pod id without header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc get pod --selector app=flink --selector component=jobmanager --no-headers -o=custom-columns=NAME:.metadata.name\n")),(0,r.kt)("h3",{id:"remote-shell-connection"},"Remote Shell connection"),(0,r.kt)("p",null,"Connect to a pod with ",(0,r.kt)("a",{parentName:"p",href:"https://devhints.io/bash"},"Bash"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"oc rsh <pod_id>\n")),(0,r.kt)("h3",{id:"execute-command-in-pod"},"Execute command in pod"),(0,r.kt)("p",null,"Example creating a folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"oc exec <pod_id> -- mkdir -p /mnt/workspace/resources\n")),(0,r.kt)("h3",{id:"delete-pod"},"Delete pod"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"oc delete pod <pod_id>\n")),(0,r.kt)("admonition",{title:"Force pod deletion",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If the pod is not properly deleted, you can force its deletion:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc delete pod --force --grace-period=0 <pod_id>\n"))),(0,r.kt)("h3",{id:"get-pod-logs"},"Get pod logs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"oc logs -f <pod_id>\n")),(0,r.kt)("admonition",{title:"Debug a pod",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Get more details on how to ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide-monitoring"},"debug a pod"),".")),(0,r.kt)("h2",{id:"create-app-from-template"},"Create app from template"),(0,r.kt)("p",null,"Create app from template using the CLI and providing parameters as arguments:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc new-app my-template -p APPLICATION_NAME=my-app -p ADMIN_PASSWORD=mypassword\n")),(0,r.kt)("p",null,"Example for the Semantic Web course notebooks:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc new-app template-jupyterstack-notebook -p APPLICATION_NAME=swcourseName -p NOTEBOOK_PASSWORD=PASSWORD\n\noc delete all --selector template=template-jupyterstack-notebook\n")),(0,r.kt)("h3",{id:"copy-files"},"Copy files"),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"https://maastrichtu-ids.github.io/dsri-documentation/docs/openshift-load-data"},"Load data")," page."))}u.isMDXComponent=!0}}]);