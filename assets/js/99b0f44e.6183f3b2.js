"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7668],{5680:(e,o,t)=>{t.d(o,{xA:()=>u,yg:()=>f});var n=t(6540);function r(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function a(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?a(Object(t),!0).forEach((function(o){r(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function l(e,o){if(null==e)return{};var t,n,r=function(e,o){if(null==e)return{};var t,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),p=function(e){var o=n.useContext(s),t=o;return e&&(t="function"==typeof e?e(o):i(i({},o),e)),t},u=function(e){var o=p(e.components);return n.createElement(s.Provider,{value:o},e.children)},c={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},d=n.forwardRef((function(e,o){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(t),f=r,g=d["".concat(s,".").concat(f)]||d[f]||c[f]||a;return t?n.createElement(g,i(i({ref:o},u),{},{components:t})):n.createElement(g,i({ref:o},u))}));function f(e,o){var t=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in o)hasOwnProperty.call(o,s)&&(l[s]=o[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5249:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>u,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var n=t(9668),r=t(1367),a=(t(6540),t(5680)),i=["components"],l={id:"workflows-introduction",title:"Introduction to workflows"},s=void 0,p={unversionedId:"workflows-introduction",id:"workflows-introduction",title:"Introduction to workflows",description:"Running workflows on the DSRI is a work in progress. It usually requires some knowledge about how to orchestrate containers.",source:"@site/docs/workflows-introduction.md",sourceDirName:".",slug:"/workflows-introduction",permalink:"/docs/workflows-introduction",draft:!1,editUrl:"https://github.com/MaastrichtU-IDS/dsri-documentation/edit/master/website/docs/workflows-introduction.md",tags:[],version:"current",lastUpdatedBy:"Laurent Winckers",lastUpdatedAt:1760361694,formattedLastUpdatedAt:"Oct 13, 2025",frontMatter:{id:"workflows-introduction",title:"Introduction to workflows"},sidebar:"docs",previous:{title:"Parallelization using Dask",permalink:"/docs/dask-tutorial"},next:{title:"Deploy GitHub Runners",permalink:"/docs/workflows-github-actions"}},u={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Current solutions on the DSRI",id:"current-solutions-on-the-dsri",level:2},{value:"GitHub Actions workflows",id:"github-actions-workflows",level:3},{value:"Apache Airflow",id:"apache-airflow",level:3},{value:"Argo",id:"argo",level:3},{value:"More options",id:"more-options",level:2},{value:"Kubeflow",id:"kubeflow",level:3},{value:"Apache Airflow",id:"apache-airflow-1",level:3},{value:"Volcano",id:"volcano",level:3},{value:"Nextflow",id:"nextflow",level:3},{value:"CWL",id:"cwl",level:3},{value:"KubeGene",id:"kubegene",level:3},{value:"Seldon",id:"seldon",level:3}],d={toc:c};function f(e){var o=e.components,t=(0,r.A)(e,i);return(0,a.yg)("wrapper",(0,n.A)({},d,t,{components:o,mdxType:"MDXLayout"}),(0,a.yg)("admonition",{title:"Work in progress",type:"warning"},(0,a.yg)("p",{parentName:"admonition"},"Running workflows on the DSRI is a work in progress. It usually requires some knowledge about how to orchestrate containers.")),(0,a.yg)("h2",{id:"introduction"},"Introduction"),(0,a.yg)("p",null,"Multiple technologies are available to run workflows on OpenShift/Kubernetes clusters. Each has its strengths and weaknesses in different areas."),(0,a.yg)("admonition",{title:"Use-case dependant",type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"The technology to use needs to be ",(0,a.yg)("strong",{parentName:"p"},"chosen depending on your use-case"),".")),(0,a.yg)("h2",{id:"current-solutions-on-the-dsri"},"Current solutions on the DSRI"),(0,a.yg)("p",null,"Those solutions can easily be deployed on the DSRI. Let"),(0,a.yg)("h3",{id:"github-actions-workflows"},"GitHub Actions workflows"),(0,a.yg)("p",null,"GitHub Actions allows you to define automatically containerized workflows through a simple YAML file hosted in your GitHub repository."),(0,a.yg)("p",null,"See the ",(0,a.yg)("a",{parentName:"p",href:"/docs/workflows-github-actions"},"page about GitHub Actions runners")," for more details, and to deploy runners on the DSRI."),(0,a.yg)("h3",{id:"apache-airflow"},"Apache Airflow"),(0,a.yg)("p",null,"Airflow is a platform to programmatically author, schedule and monitor workflows, aka. DAGs (directed acyclic graphs)."),(0,a.yg)("p",null,"See the ",(0,a.yg)("a",{parentName:"p",href:"/docs/workflows-airflow"},"page about Airflow")," for more details, and to deploy Airflow on the DSRI."),(0,a.yg)("h3",{id:"argo"},"Argo"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://argoproj.github.io/argo/"},"Argo")," is a container native workflow engine for ",(0,a.yg)("a",{parentName:"p",href:"https://kubernetes.io/"},"Kubernetes")," supporting both ",(0,a.yg)("a",{parentName:"p",href:"https://argoproj.github.io/docs/argo/examples/readme.html#dag"},"DAG")," and ",(0,a.yg)("a",{parentName:"p",href:"https://argoproj.github.io/docs/argo/examples/readme.html#steps"},"step based")," workflows."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Workflows easy to define using Kubernetes-like YAML files."),(0,a.yg)("li",{parentName:"ul"},"Easy to define if your workflow is composed of Docker containers to run with arguments.")),(0,a.yg)("admonition",{title:"Contact us",type:"info"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("a",{parentName:"p",href:"/help"},"Contact us")," if you want to run Argo workflow on the DSRI")),(0,a.yg)("h2",{id:"more-options"},"More options"),(0,a.yg)("p",null,"Let us know if you are interested in deploying, and using, any of those workflows on the DSRI."),(0,a.yg)("h3",{id:"kubeflow"},"Kubeflow"),(0,a.yg)("p",null,"Optimized for Tensorflow workflows on Kubernetes."),(0,a.yg)("p",null,"Pipelines written in Python."),(0,a.yg)("h3",{id:"apache-airflow-1"},"Apache Airflow"),(0,a.yg)("p",null,"Define, schedule and run workflows. "),(0,a.yg)("p",null,"Can be deployed with OpenDataHub, see also ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/majordomusio/openshift-airflow"},"this deployment for OpenShift"),"."),(0,a.yg)("p",null,"See also: Airflow on ",(0,a.yg)("a",{parentName:"p",href:"https://kubernetes.io/blog/2018/06/28/airflow-on-kubernetes-part-1-a-different-kind-of-operator/"},"Kubernetes blog"),", and Kubernetes in ",(0,a.yg)("a",{parentName:"p",href:"https://airflow.apache.org/docs/stable/kubernetes.html"},"Airflow documentation"),"."),(0,a.yg)("h3",{id:"volcano"},"Volcano"),(0,a.yg)("p",null,"Run batch pipelines on Kubernetes with ",(0,a.yg)("a",{parentName:"p",href:"https://volcano.sh/"},"Volcano"),". "),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"More a scheduler than a workflow engine. ")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Volcano can be used to run Spark, Kubeflow or KubeGene workflows."))),(0,a.yg)("h3",{id:"nextflow"},"Nextflow"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://www.nextflow.io/"},"Nextflow")," has been developed by the genomic research scientific community and is built to run bioinformatics pipeline."),(0,a.yg)("p",null,"Define your workflow in a Bash script fashion, providing input, output and the command to run. Without the need to create and use Docker container for Conda pipelines."),(0,a.yg)("h3",{id:"cwl"},"CWL"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Developed by the genomic research scientific community."),(0,a.yg)("li",{parentName:"ul"},"Good support for provenance description (export as RDF)."),(0,a.yg)("li",{parentName:"ul"},"Support on OpenShift still in development",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://airflow.apache.org/docs/stable/kubernetes.html"},"Apache Airflow")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/Duke-GCB/calrissian/"},"workflows-cwl")))),(0,a.yg)("li",{parentName:"ul"},"Propose a GUI to build the workflows: ",(0,a.yg)("a",{parentName:"li",href:"https://rabix.io/"},"Rabix Composer"))),(0,a.yg)("h3",{id:"kubegene"},"KubeGene"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://kubegene.io/"},"KubeGene")," is a turn-key genome sequencing workflow management framework."),(0,a.yg)("p",null,"See the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/kubegene/kubegene/blob/master/example/simple-sample/simple-sample.yaml"},"Workflow example"),", and how to ",(0,a.yg)("a",{parentName:"p",href:"https://kubegene.io/docs/guides/tool/"},"define a tool"),"."),(0,a.yg)("h3",{id:"seldon"},"Seldon"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://www.seldon.io/tech/"},"Open-source platform")," for rapidly deploying machine learning models on Kubernetes. Manage, serve and scale models built in any framework on Kubernetes."),(0,a.yg)("admonition",{title:"Contact us",type:"info"},(0,a.yg)("p",{parentName:"admonition"},"Feel free to ",(0,a.yg)("a",{parentName:"p",href:"/help"},"contact us")," if you have any questions about running workflows on DSRI or to request the support of a new technology.")))}f.isMDXComponent=!0}}]);