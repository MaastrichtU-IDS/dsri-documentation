"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6798],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=c(n),d=o,m=f["".concat(s,".").concat(d)]||f[d]||u[d]||a;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7044:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var r=n(3117),o=n(102),a=(n(7294),n(3905)),l=["components"],i={id:"Enabling-VPN-WSL",title:"Enabling VPN access in WSL2"},s=void 0,c={unversionedId:"Enabling-VPN-WSL",id:"Enabling-VPN-WSL",title:"Enabling VPN access in WSL2",description:"Follow these steps in the WSL2 environment:",source:"@site/docs/enabling-vpn-wsl.md",sourceDirName:".",slug:"/Enabling-VPN-WSL",permalink:"/docs/Enabling-VPN-WSL",draft:!1,editUrl:"https://github.com/MaastrichtU-IDS/dsri-documentation/edit/master/website/docs/enabling-vpn-wsl.md",tags:[],version:"current",lastUpdatedBy:"Adekunle Onaopepo",lastUpdatedAt:1732199154,formattedLastUpdatedAt:"Nov 21, 2024",frontMatter:{id:"Enabling-VPN-WSL",title:"Enabling VPN access in WSL2"}},p={},u=[{value:"Follow these steps in the WSL2 environment:",id:"follow-these-steps-in-the-wsl2-environment",level:2}],f={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"follow-these-steps-in-the-wsl2-environment"},"Follow these steps in the WSL2 environment:"),(0,a.kt)("p",null,"Create a file in /etc/wsl.conf:"),(0,a.kt)("p",null,"[network]"),(0,a.kt)("p",null,"generateResolvConf = false"),(0,a.kt)("p",null,"This makes sure that WSL2 does not generate it's own resolv.conf anymore."),(0,a.kt)("p",null,"Edit the file /etc/resolv.conf and add the appropiate nameservers:"),(0,a.kt)("p",null,"nameserver 137.120.1.1"),(0,a.kt)("p",null,"nameserver 137.120.1.5"),(0,a.kt)("p",null,"nameserver 8.8.8.8 # OR OF YOUR CHOOSING"),(0,a.kt)("p",null,"search unimaas.nl"),(0,a.kt)("p",null,"These are all the steps you should take in WSL2. Now you should do the following step after you connected to the VPN.\nYou can run this command in Powershell:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Powershell"},'Get-NetAdapter | Where-Object {$_.InterfaceDescription -Match "Cisco AnyConnect"} | Set-NetIPInterface -InterfaceMetric 6000\n\n')),(0,a.kt)("p",null,"you should now be able to verify that WSL2 has connectivity:"),(0,a.kt)("p",null,"ping google.com -c 4"))}d.isMDXComponent=!0}}]);