(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{173:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},h=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=u(n),h=r,m=b["".concat(i,".").concat(h)]||b[h]||p[h]||a;return n?o.a.createElement(m,s(s({ref:t},l),{},{components:n})):o.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),a=(n(0),n(173)),i={id:"workflows-github-actions",title:"Deploy GitHub Runners"},s={unversionedId:"workflows-github-actions",id:"workflows-github-actions",isDocsHomePage:!1,title:"Deploy GitHub Runners",description:"Deploy a GitHub Actions runner to run workflows simple to define using YAML, and hosted in your GitHub repository on the DSRI.",source:"@site/docs/workflows-github-actions.md",slug:"/workflows-github-actions",permalink:"/dsri-documentation/docs/workflows-github-actions",editUrl:"https://github.com/MaastrichtU-IDS/dsri-documentation/edit/master/website/docs/workflows-github-actions.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1619556070,sidebar:"docs",previous:{title:"Introduction to workflows",permalink:"/dsri-documentation/docs/workflows-introduction"},next:{title:"Run Argo workflows",permalink:"/dsri-documentation/docs/workflows-argo"}},c=[{value:"Install",id:"install",children:[{value:"Runner for organization",id:"runner-for-organization",children:[]},{value:"Runner for repository",id:"runner-for-repository",children:[]},{value:"Uninstall the runner",id:"uninstall-the-runner",children:[]}]},{value:"See also",id:"see-also",children:[]}],l={rightToc:c};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Deploy a GitHub Actions runner to run workflows simple to define using YAML, and hosted in your GitHub repository on the DSRI."),Object(a.b)("p",null,"This allows you to run larger workloads than on GitHub-hosted runners, which are limited to 7G RAM, 1 CPU and 6h per job."),Object(a.b)("p",null,"For more informations about GitHub Actions workflows: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/features/actions"},"https://github.com/features/actions")),Object(a.b)("p",null,"Here are some of the advantage of GitHub Actions:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A step can be any Bash command, or a reusable Action from ",Object(a.b)("a",{parentName:"li",href:"https://github.com/marketplace/"},"GitHub Marketplace"),", which can be easily define from a Docker container, and share with your collaborators"),Object(a.b)("li",{parentName:"ul"},"Parallelization can easily be added manually or dynamically to up to 255 jobs"),Object(a.b)("li",{parentName:"ul"},"It provides a good logging system directly available in your repository on GitHub"),Object(a.b)("li",{parentName:"ul"},"Easy to define triggers (on code push, cron job, manual request), and secrets (such as passwords)")),Object(a.b)("h2",{id:"install"},"Install"),Object(a.b)("p",null,"Install the Helm repository to be able to deploy the GitHub Actions Runner:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"helm repo add openshift-actions-runner https://redhat-actions.github.io/openshift-actions-runner-chart\nhelm repo update\n")),Object(a.b)("p",null,"Then create a GitHub Personal Access Token as per the instructions in the ",Object(a.b)("a",{parentName:"p",href:"https://github.com/redhat-actions/openshift-actions-runner#pat-guidelines"},"runner image README"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"tl;dr:")," Go to your Settings: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/settings/tokens"},"https://github.com/settings/tokens")," and check:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"repo")," (maybe also ",Object(a.b)("inlineCode",{parentName:"li"},"workflow"),"?)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"admin:org")," if the Runner is for an organization")),Object(a.b)("h3",{id:"runner-for-organization"},"Runner for organization"),Object(a.b)("p",null,"Provide the token previously created and the organization name"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},'export GITHUB_PAT="TOKEN"\nexport GITHUB_OWNER=MaastrichtU-IDS\n')),Object(a.b)("p",null,"Deploy the runner for MaastrichtU-IDS organization:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},'helm install actions-runner openshift-actions-runner/actions-runner \\\n    --set-string githubPat=$GITHUB_PAT \\\n    --set-string githubOwner=$GITHUB_OWNER \\\n    --set runnerLabels="{ dsri, bio2rdf }" \\\n    --set replicas=3 \\\n    --set privileged=true \\\n    --set memoryRequest="512Mi" \\\n    --set memoryLimit="1Gi" \\\n    --set cpuRequest="100m" \\\n    --set cpuLimit="250m"\n')),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Checkout ",Object(a.b)("a",{parentName:"p",href:"https://github.com/redhat-actions/openshift-actions-runner-chart/blob/main/values.yaml"},"all available parameters here"))),Object(a.b)("p",null,"Check the deployment:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"helm get manifest actions-runner | kubectl get -f -\n")),Object(a.b)("p",null,"Go to your organization Settings page on GitHub, then go to the ",Object(a.b)("strong",{parentName:"p"},"Actions")," tab, and scroll to the bottom. In the list of active runners you should see the runners you just deployed. "),Object(a.b)("h3",{id:"runner-for-repository"},"Runner for repository"),Object(a.b)("p",null,"You can also deploy a runner for a specific repository:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},'export GITHUB_PAT="TOKEN"\n# For an org runner, this is the org.\n# For a repo runner, this is the repo owner (org or user).\nexport GITHUB_OWNER=vemonet\n# For an org runner, omit this argument. \n# For a repo runner, the repo name.\nexport GITHUB_REPO=shapes-of-you\n')),Object(a.b)("p",null,"Deploy the runner:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},'helm install actions-runner openshift-actions-runner/actions-runner \\\n    --set-string githubPat=$GITHUB_PAT \\\n    --set-string githubOwner=$GITHUB_OWNER \\\n    --set-string githubRepository=$GITHUB_REPO \\\n    --set runnerLabels="{ dsri, bio2rdf }"\n')),Object(a.b)("h3",{id:"uninstall-the-runner"},"Uninstall the runner"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"helm uninstall actions-runner\n")),Object(a.b)("h2",{id:"see-also"},"See also"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"GitHub runner chart repository: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/redhat-actions/openshift-actions-runner-chart"},"https://github.com/redhat-actions/openshift-actions-runner-chart"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Image for the runner: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/redhat-actions/openshift-actions-runner"},"https://github.com/redhat-actions/openshift-actions-runner"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"An action to automatically deploy a runner on a cluster (require to run openconnect to VPN first): ",Object(a.b)("a",{parentName:"p",href:"https://github.com/redhat-actions/openshift-actions-runner"},"https://github.com/redhat-actions/openshift-actions-runner")))))}u.isMDXComponent=!0}}]);