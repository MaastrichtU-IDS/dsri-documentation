---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: jupyterlab-gpu
metadata:
  annotations:
    description: |-
      Start JupyterLab to run CUDA, Tensorflow, or PyTorch using GPUs
      with the root user.
      
      By default the GPU will not be enabled, so you can start
      this workspace to prepare your code and data. Once your the GPU has been enabled
      in your project, you can enable the GPU in your workspace with this command
      (replace jupyterlab-gpu with the name of your deployment)
      
      oc patch deployment/jupyterlab-gpu
      --type=json -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/resources",
      "value": {"requests": {"nvidia.com/gpu": 1}, "limits": {"nvidia.com/gpu": 1}}}]'
      
      üì¶ We recommend you to use `mamba install` to install new packages, but you can
      also use `pip install` or `apt-get install`
      
      üìÇ Use the `/workspace/persistent` folder (workspace of the JupyterLab UI) to store your data in the persistent
      storage
      
      üê≥ You can directly use the following Docker images to work on GPU:
      - CUDA build, based on https://ngc.nvidia.com/catalog/containers/nvidia:cuda
      ghcr.io/maastrichtu-ids/jupyterlab:cuda
      - Tensorflow build, based on https://ngc.nvidia.com/catalog/containers/nvidia:tensorflow
      ghcr.io/maastrichtu-ids/jupyterlab:tensorflow
      - PyTorch build, based on https://ngc.nvidia.com/catalog/containers/nvidia:pytorch
      ghcr.io/maastrichtu-ids/jupyterlab:pytorch
      - FSL, built with NeuroDocker and CUDA:
      ghcr.io/maastrichtu-ids/jupyterlab:fsl-gpu
      
      Feel free to check how the GPU images are built and to customize them for your project:
      https://github.com/MaastrichtU-IDS/jupyterlab
      
      üîß You can find some
      examples for Tensorflow and PyTorch in the following repositories:
      https://gitlab.maastrichtuniversity.nl/dsri-examples/dsri-tensorflow-workspace
      https://gitlab.maastrichtuniversity.nl/dsri-examples/dsri-pytorch-workspace
      
      üóëÔ∏è
      Use this command with your application name to delete completely your application
      and its persistent volumes:
      oc delete all,pvc,secret,configmaps,serviceaccount,rolebinding
      --selector app=$APPLICATION_NAME
    iconClass: icon-python
    openshift.io/display-name: JupyterLab on GPU
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-on-gpu
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    tags: python,jupyter,gpu
  name: jupyterlab-gpu
  namespace: openshift

objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-password: "{.data['application-password']}"
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  stringData:
    application-password: "${JUPYTER_TOKEN}"

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: "${STORAGE_SIZE}"
    storageClassName: ocs-storagecluster-cephfs

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: "${APPLICATION_NAME}"
        deployment: "${APPLICATION_NAME}"
    strategy:
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          deployment: "${APPLICATION_NAME}"
      spec:
        containers:
        - env:
          - name: JUPYTER_TOKEN
            valueFrom:
              secretKeyRef:
                key: application-password
                name: "${APPLICATION_NAME}"
          - name: GIT_NAME
            value: "${GIT_NAME}"
          - name: GIT_EMAIL
            value: "${GIT_EMAIL}"
          - name: WORKSPACE
            value: "/workspace"
          - name: PERSISTENT_FOLDER
            value: "/workspace/persistent"
          image: "${IMAGE_NAME}"
          imagePullPolicy: "${IMAGE_PULL_POLICY}"
          name: "${APPLICATION_NAME}"
          ports:
          - containerPort: 8888
            protocol: TCP
          - containerPort: 6006
            protocol: TCP
          resources:
            limits:
              cpu: '64'
              memory: 256Gi
            requests:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
          - mountPath: "/dev/shm"
            name: dshm
          - mountPath: "/workspace/persistent"
            name: data
        serviceAccountName: anyuid
        volumes:
        - emptyDir:
            medium: Memory
          name: dshm
        - name: data
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}"

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: 8888-tcp
      port: 8888
      protocol: TCP
      targetPort: 8888
    - name: 6006-tcp
      port: 6006
      protocol: TCP
      targetPort: 6006
    selector:
      app: "${APPLICATION_NAME}"
      deployment: "${APPLICATION_NAME}"

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    host: ''
    port:
      targetPort: 8888-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100

parameters:
- name: APPLICATION_NAME
  description: Must be unique in the project. It will be used to generate the application URL.
  displayName: Application name
  required: true
  value: jupyterlab-gpu
- name: IMAGE_NAME
  description: Check the description on the right for more details about available images
  displayName: Docker image used
  required: true
  value: ghcr.io/maastrichtu-ids/jupyterlab:tensorflow
- name: JUPYTER_TOKEN
  description: The password, aka. token, to access the notebook
  displayName: Notebook password
  required: true
- name: STORAGE_SIZE
  description: Size of the storage allocated to the notebook persistent storage in `/workspace/persistent`.
  displayName: Storage size
  required: true
  value: 20Gi
- name: GIT_NAME
  description: Email used to automatically define git config --global user.name
  displayName: Git name
  required: true
  value: default
- name: GIT_EMAIL
  description: Email used to automatically define git config --global user.email
  displayName: Git email
  required: true
  value: default@maastrichtuniversity.nl
- name: IMAGE_PULL_POLICY
  description: Use Always to make sure the new image is pulled when you update it
  displayName: Image pull policy
  required: true
  value: IfNotPresent