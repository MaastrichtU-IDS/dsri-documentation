---
kind: Template
apiVersion: template.openshift.io/v1
labels:
  template: jupyterlab-ricopili
metadata:
  name: jupyterlab-ricopili
  annotations:
    openshift.io/display-name: JupyterLab Ricopili
    description: |-
      Start JupyterLab image with ricopoli tools installed as the `jovyan` user.

      üìÇ Use the workspace (/home/jovyan/persistent) of the web UI to store your data in the persistent storage automatically created
      You can find the persistent storage in the DSRI web UI, go to Administrator view > Storage > Persistent Volume Claims
      
      üê≥ Docker images, see https://github.com/MaastrichtU-IDS/jupyterlab/tree/main/ricopili & https://github.com/MaastrichtU-Library/rcs-docker-ricopili for more details
      - Ricopili package:
      ghcr.io/maastrichtu-ids/jupyterlab:ricopili
    iconClass: icon-beaker
    tags: custom,interface,root
    openshift.io/provider-display-name: Research Computing Support, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help

parameters:
- name: APPLICATION_NAME
  displayName: Name for the application
  description: Must be without spaces (use -), and unique in the project.
  value: jupyterlab-ricopili
  required: true
- name: PASSWORD
  displayName: Web UI Password
  description: The password to access the web UI
  required: true
- name: APPLICATION_IMAGE
  displayName: Docker image
  value: ghcr.io/maastrichtu-ids/jupyterlab:ricopili
  required: true
  description: Docker image of your application in a public registry
- name: STORAGE_SIZE
  displayName: Storage size
  description: Size of the storage allocated to the notebook persistent storage.
  value: 10Gi
  required: true

objects:
- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: custom-workspace
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: ${APPLICATION_IMAGE}
      importPolicy:
        scheduled: false
    lookupPolicy:
      local: true

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: custom-workspace
  spec:
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: ${STORAGE_SIZE}
    storageClassName: ocs-storagecluster-cephfs

- kind: Secret
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: custom-workspace
  stringData:
    application-password: ${PASSWORD}

- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: custom-workspace
  spec:
    replicas: 1
    strategy:
      type: Recreate
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}
        deployment: ${APPLICATION_NAME}
    template:
      metadata:
        annotations:
          io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel: 'true'
        labels:
          app: ${APPLICATION_NAME}
          deployment: ${APPLICATION_NAME}
      spec:
        runtimeClassName: selinux
        serviceAccountName: anyuid
        containers:
        - name: custom-app
          image: ${APPLICATION_IMAGE}
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8888
            protocol: TCP
          env:
          - name: JUPYTER_TOKEN
            valueFrom:
              secretKeyRef:
                key: application-password
                name: ${APPLICATION_NAME}
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                key: application-password
                name: ${APPLICATION_NAME}
          volumeMounts:
          - name: data
            mountPath: /home/jovyan/persistent
          - name: dshm
            mountPath: /dev/shm
          resources:
            limits:
              cpu: '32'
              memory: 200Gi
            requests:
              cpu: 200m
              memory: 2Gi
        automountServiceAccountToken: false
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}
        - name: dshm
          emptyDir:
            medium: Memory

- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: custom-workspace
  spec:
    ports:
    - name: 8888-tcp
      protocol: TCP
      port: 8888
      targetPort: 8888
    selector:
      app: ${APPLICATION_NAME}
      deployment: ${APPLICATION_NAME}
    type: ClusterIP

- kind: Route
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: custom-workspace
  spec:
    host: ''
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    port:
      targetPort: 8888-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect