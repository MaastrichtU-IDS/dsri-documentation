---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: trinityrnaseq
  annotations:
    openshift.io/display-name: trinityrnaseq with root user (Persistent)
    description: |-
      Start trinityrnaseq with the 'root' user which has sudo permissions to install anything.

      ðŸ“‚ Use the `/usr/local/src/work` folder (home of the root user) to store your data in the existing persistent storage
      You can find the persistent storage in the DSRI web UI, go to Administrator view > Storage > Persistent Volume Claims
      ðŸ”— We enabled the port 8787 in the trinityrnaseq container if you need to deploy applications
      
      Image from https://github.com/trinityrnaseq/trinityrnaseq, hosted in the GitHub Container Registry.
    iconClass: icon-scala
    tags: trinityrnaseq,persistent,omics
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/catalog-utilities#trinity-rna-seq
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    # template.openshift.io/bindable: 'false'
labels:
  template: trinityrnaseq
message: |-
  A trinityrnaseq pod has been scheduled for creation in your project, and should be soon available.
  Building images takes some minutes to complete, so please be patient. You can follow progress on your projects overview page.

  You can use `oc get pods` to get the pod ID and connect using your local terminal `oc rsh POD_ID`
  Or use the terminal tab in the trinityrnaseq pod view of the OpenShift web UI
parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: Must be unique in the project. It will be used to generate the application URL
  value: trinityrnaseq
  required: true
- name: STORAGE_SIZE
  displayName: Storage size
  description: Size of the storage used for the notebook (approximate).
  value: 10Gi
  required: true
- name: APPLICATION_IMAGE
  displayName: Application Docker image
  description: See https://github.com/orgs/MaastrichtU-IDS/packages/container/package/trinityrnaseq for more details on the image
  value: ghcr.io/maastrichtu-ids/trinityrnaseq
  required: true

objects:
- apiVersion: "v1"
  kind: "PersistentVolumeClaim"
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    accessModes:
      - "ReadWriteMany"
    resources:
      requests:
        storage: ${STORAGE_SIZE}

- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: trinityrnaseq
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: ${APPLICATION_IMAGE}
      importPolicy:
        scheduled: true
    lookupPolicy:
      local: true

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - trinityrnaseq-container
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          deploymentconfig: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: anyuid
        #nodeSelector:
        # dsri.unimaas.nl/cpu: 'true'
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}"
        containers:
        - name: trinityrnaseq-container
          image: ${APPLICATION_NAME}:latest
          command: [ "tail", "-f", "/dev/null"]
          ports:
          - containerPort: 8787
            protocol: TCP
          # resources:
          #   limits:
          #     cpu: '64'
          #     memory: 200Gi
          #   requests:
          #     cpu: '2'
          #     memory: 4Gi
          volumeMounts:
          - name: data
            # mountPath: "/data"
            mountPath: "/usr/local/src/work"
        automountServiceAccountToken: false

- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: 8787-tcp
      protocol: TCP
      port: 8787
      targetPort: 8787
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"

# - kind: Route
#   apiVersion: route.openshift.io/v1
#   metadata:
#     name: "${APPLICATION_NAME}"
#     labels:
#       app: "${APPLICATION_NAME}"
#   spec:
#     host: ''
#     to:
#       kind: Service
#       name: "${APPLICATION_NAME}"
#       weight: 100
#     port:
#       targetPort: 8787-tcp
#     tls:
#       termination: edge
#       insecureEdgeTerminationPolicy: Redirect
