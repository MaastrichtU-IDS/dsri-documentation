---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: filebrowser
  annotations:
    openshift.io/display-name: File Browser for existing storage
    description: |-
      Deploy a filebrowser on your persistent volume. This will provide a web UI to upload and download data to your DSRI persistent volume.

      You need to hash the password first, use this docker command on your laptop to generate the password (replace yourpassword by your password), then double each $ to escape them:
      docker run filebrowser/filebrowser hash yourpassword

      ðŸ”‘ Default credentials are
      - login: admin
      - password: browsemeplease

      ðŸ“‚ Note that we use the `/srv` folder in the container (workspace of the Filebrowser UI) to access the data in the existing persistent storage
    iconClass: icon-load-balancer
    tags: filebrowser,storage
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/catalog-utilities#file-browser
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
labels:
  template: filebrowser
message: The filebrowser has been deployed with default login/password (admin/admin). Change it in the Filebrowser web UI settings at the first login.

parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: Must be without spaces (use -), and unique in the project.
  value: filebrowser
  required: true
- name: APPLICATION_PASSWORD
  displayName: Application password
  description: Provide the password as a hash (default value is browsemeplease) to login with admin in the filebrowser
  value: $$2a$$10$$1q1DVy.Cz3e5566.UPJT8eeexDspJ4sI8qZR6TfyHvA/7NH0beKY.
  required: true
- name: APPLICATION_IMAGE
  displayName: Application image
  description: Filebrowser image.
  value: cr.icts.unimaas.nl/dsri_ghcr.io/maastrichtu-ids/filebrowser:v2.11.0
  required: true
- name: STORAGE_NAME
  displayName: Storage name
  description: Name of the Persistent Volume Claim that will be exposed by the filebrowser.
  value: storage-name
  required: true
- name: STORAGE_FOLDER
  displayName: Storage folder
  description: Path to the folder used to store your application data in the the Persistent Volume Claim (leave empty to use the root folder of the storage)
  required: false

objects:
- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: filebrowser
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: ${APPLICATION_IMAGE}
      importPolicy:
        scheduled: false
    lookupPolicy:
      local: true

- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    replicas: 1
    selector:
      matchLabels:
        app: "${APPLICATION_NAME}"
        deployment: "${APPLICATION_NAME}"
    template:
      metadata:
        annotations:
          io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel: 'true'
        labels:
          app: "${APPLICATION_NAME}"
          deployment: "${APPLICATION_NAME}"
      spec:
        runtimeClassName: selinux
        serviceAccountName: anyuid
        imagePullSecrets:
          - name: harbor-ghcr-pull-secret
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "${STORAGE_NAME}"
        containers:
        - name: filebrowser-container
          image: ${APPLICATION_IMAGE}
          imagePullPolicy: Always
          args: ["--password", "${APPLICATION_PASSWORD}"]
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
          - name: data
            mountPath: "/srv"
            subPath: "${STORAGE_FOLDER}"
        automountServiceAccountToken: false

- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: 80-tcp
      protocol: TCP
      port: 80
      targetPort: 80
    selector:
      app: "${APPLICATION_NAME}"
      deployment: "${APPLICATION_NAME}"

- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    host: ''
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 80-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect