---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: vscode-root-dynamic
  annotations:
    openshift.io/display-name: VisualStudio Code with root user (Persistent)
    description: |-
      Start VisualStudio Code server with the coder user which has root permissions (sudo) 

      ðŸ“‚ Use the /home/coder/project folder (workspace of the VSCode UI) to store your data in the existing persistent storage
      You can find the persistent storage in the DSRI web UI, go to Administrator view > Storage > Persistent Volume Claims
      
      Python 3 and Java 11 already installed. You can install packages with 'apt-get' after starting the server.

      Image based on codercom/code-server image, hosted in the GitHub Container Registry.
      Visit https://github.com/MaastrichtU-IDS/code-server for more details and to customize the image
      Visit original codercom image at https://hub.docker.com/r/codercom/code-server

      ðŸ”’ You need root containers enabled (aka. anyuid) in your project to start this application.
    iconClass: icon-kubevirt
    tags: visualstudio,vscode,root,persistent
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-vscode
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    # template.openshift.io/bindable: 'false'
labels:
  template: vscode-root-dynamic
parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: Must be unique in the project. It will be used to generate the application
    URL.
  value: vscode-root
  required: true
- name: PASSWORD
  displayName: Password
  description: The password to access the VSCode application
  value: mypassword
  # from: "[a-zA-Z0-9]{16}"
  # generate: expression
  required: true
- name: STORAGE_SIZE
  displayName: Storage size
  description: Size of the storage used for the notebook (approximate).
  value: 10Gi
  required: true
- name: APPLICATION_IMAGE
  displayName: Docker image for the application
  description: See https://github.com/MaastrichtU-IDS/code-server for more details and to customize the image
  value: ghcr.io/maastrichtu-ids/code-server
  required: true

objects:
# - apiVersion: v1
#   kind: Secret
#   metadata:
#     annotations:
#       template.openshift.io/expose-password: "{.data['application-password']}"
#     name: "${APPLICATION_NAME}"
#   stringData:
#     application-password: "${PASSWORD}"

- apiVersion: "v1"
  kind: "PersistentVolumeClaim"
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    accessModes:
      - "ReadWriteMany"
    resources:
      requests:
        storage: ${STORAGE_SIZE}

- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: vscode-root-dynamic
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: ${APPLICATION_IMAGE}
      # importPolicy:
      #   scheduled: true
    lookupPolicy:
      local: true

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    # - type: ImageChange
    #   imageChangeParams:
    #     automatic: true
    #     containerNames:
    #     - vscode-container
    #     from:
    #       kind: ImageStreamTag
    #       name: vscode-imagestream
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          deploymentconfig: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: anyuid
        #nodeSelector:
        #  dsri.unimaas.nl/cpu: 'true'
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}"
        containers:
        - name: vscode-container
          image: ${APPLICATION_IMAGE}:latest
          ports:
          - containerPort: 8080
            protocol: TCP
          # resources:
          #   limits:
          #     cpu: '64'
          #     memory: 200Gi
          #   requests:
          #     cpu: '2'
          #     memory: 4Gi
          volumeMounts:
          - name: data
            mountPath: "/home/coder/project"
          env:
          - name: PASSWORD
            value: ${PASSWORD}
          #   valueFrom:
          #     secretKeyRef:
          #       key: application-password
          #       name: "${APPLICATION_NAME}"
          # - name: GIT_URL
          #   value: "${GIT_REPOSITORY_URL}"
        automountServiceAccountToken: false

- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"

- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    host: ''
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
