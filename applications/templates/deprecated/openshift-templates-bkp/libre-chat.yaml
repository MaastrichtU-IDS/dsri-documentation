apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: libre-chat
metadata:
  annotations:
    description: "Deploy a fully self-hosted chatbot web service based on open source
      Large Language Models (LLMs), such as Llama 2\n\nCheckout the documentation
      at https://vemonet.github.io/libre-chat for more details on how to configure
      your chatbot\nYou can also find examples config available at https://github.com/vemonet/libre-chat/blob/main/config\n\n\U0001F4C2
      You can find the persistent storage in the DSRI web UI, go to Search > Resources
      > Persistent Volume Claim.\n\n\U0001F5D1️ Use this command with your application
      name to delete completely your application and its persistent volumes:\noc delete
      all,pvc,secret,configmaps,serviceaccount,rolebinding --selector app=$APPLICATION_NAME"
    iconClass: icon-rh-integration
    kubectl.kubernetes.io/last-applied-configuration: "{\"apiVersion\":\"template.openshift.io/v1\",\"kind\":\"Template\",\"labels\":{\"template\":\"libre-chat\"},\"metadata\":{\"annotations\":{\"description\":\"Deploy
      a fully self-hosted chatbot web service based on open source Large Language
      Models (LLMs), such as Llama 2\\n\\nCheckout the documentation at https://vemonet.github.io/libre-chat
      for more details on how to configure your chatbot\\nYou can also find examples
      config available at https://github.com/vemonet/libre-chat/blob/main/config\\n\\n\U0001F4C2
      You can find the persistent storage in the DSRI web UI, go to Search \\u003e
      Resources \\u003e Persistent Volume Claim.\\n\\n\U0001F5D1️ Use this command
      with your application name to delete completely your application and its persistent
      volumes:\\noc delete all,pvc,secret,configmaps,serviceaccount,rolebinding --selector
      app=$APPLICATION_NAME\",\"iconClass\":\"icon-rh-integration\",\"openshift.io/display-name\":\"Libre
      Chat\",\"openshift.io/documentation-url\":\"https://vemonet.github.io/libre-chat\",\"openshift.io/provider-display-name\":\"Institute
      of Data Science, UM\",\"openshift.io/support-url\":\"https://maastrichtu-ids.github.io/dsri-documentation/help\",\"tags\":\"chatbot,llm,llama2,chatgpt\"},\"name\":\"libre-chat\",\"namespace\":\"openshift\"},\"objects\":[{\"apiVersion\":\"image.openshift.io/v1\",\"kind\":\"ImageStream\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"template\":\"libre-chat\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"lookupPolicy\":{\"local\":true},\"tags\":[{\"from\":{\"kind\":\"DockerImage\",\"name\":\"${APPLICATION_IMAGE}\"},\"importPolicy\":{\"scheduled\":false},\"name\":\"latest\"}]}},{\"apiVersion\":\"v1\",\"kind\":\"PersistentVolumeClaim\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"template\":\"libre-chat\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"accessModes\":[\"ReadWriteMany\"],\"resources\":{\"requests\":{\"storage\":\"${STORAGE_SIZE}\"}}}},{\"apiVersion\":\"v1\",\"kind\":\"DeploymentConfig\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"template\":\"libre-chat\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"replicas\":1,\"selector\":{\"app\":\"${APPLICATION_NAME}\",\"deploymentconfig\":\"${APPLICATION_NAME}\"},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel\":\"true\"},\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"deploymentconfig\":\"${APPLICATION_NAME}\"}},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"env\":[{\"name\":\"LIBRECHAT_CONF_URL\",\"value\":\"${LIBRECHAT_CONF_URL}\"},{\"name\":\"LIBRECHAT_WORKERS\",\"value\":\"${LIBRECHAT_WORKERS}\"}],\"failureThreshold\":40,\"image\":\"${APPLICATION_NAME}:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"initialDelaySeconds\":15,\"tcpSocket\":{\"port\":8000}},\"name\":\"libre-chat-api\",\"periodSeconds\":10,\"ports\":[{\"containerPort\":8000,\"protocol\":\"TCP\"}],\"readinessProbe\":{\"tcpSocket\":{\"port\":8000}},\"resources\":{\"limits\":{\"cpu\":\"${CPU_LIMIT}\",\"memory\":\"${MEMORY_LIMIT}\"},\"requests\":{\"cpu\":\"${CPU_MIN}\",\"memory\":\"${MEMORY_MIN}\"}},\"timeoutSeconds\":2,\"volumeMounts\":[{\"mountPath\":\"/data\",\"name\":\"data\"},{\"mountPath\":\"/dev/shm\",\"name\":\"dshm\"}]}],\"runtimeClassName\":\"selinux\",\"serviceAccountName\":\"anyuid\",\"volumes\":[{\"name\":\"data\",\"persistentVolumeClaim\":{\"claimName\":\"${APPLICATION_NAME}\"}},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"dshm\"}]}},\"triggers\":[{\"type\":\"ConfigChange\"},{\"imageChangeParams\":{\"automatic\":true,\"containerNames\":[\"libre-chat-api\"],\"from\":{\"kind\":\"ImageStreamTag\",\"name\":\"${APPLICATION_NAME}:latest\"}},\"type\":\"ImageChange\"}]}},{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"template\":\"libre-chat\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"ports\":[{\"name\":\"8000-tcp\",\"port\":8000,\"protocol\":\"TCP\",\"targetPort\":8000}],\"selector\":{\"app\":\"${APPLICATION_NAME}\",\"deploymentconfig\":\"${APPLICATION_NAME}\"},\"type\":\"ClusterIP\"}},{\"apiVersion\":\"v1\",\"kind\":\"Route\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"host\":\"\",\"port\":{\"targetPort\":\"8000-tcp\"},\"tls\":{\"insecureEdgeTerminationPolicy\":\"Redirect\",\"termination\":\"edge\"},\"to\":{\"kind\":\"Service\",\"name\":\"${APPLICATION_NAME}\",\"weight\":100}}}],\"parameters\":[{\"description\":\"Must
      be without spaces (use -), and unique in the project.\",\"displayName\":\"Name
      for the application\",\"name\":\"APPLICATION_NAME\",\"required\":true,\"value\":\"libre-chat\"},{\"description\":\"Check
      the description on the right for more details about available images\",\"displayName\":\"Docker
      image for Libre Chat\",\"name\":\"APPLICATION_IMAGE\",\"required\":true,\"value\":\"ghcr.io/vemonet/libre-chat:main\"},{\"description\":\"Checkout
      the documentation at https://vemonet.github.io/libre-chat for more details on
      how to configure your chatbot\",\"displayName\":\"Direct URL to the YAML configuration
      file for the chatbot\",\"name\":\"LIBRECHAT_CONF_URL\",\"required\":true,\"value\":\"https://raw.github.com/vemonet/libre-chat/main/config/chat-conversation.yml\"},{\"displayName\":\"Number
      of workers for the API\",\"name\":\"LIBRECHAT_WORKERS\",\"required\":true,\"value\":\"4\"},{\"description\":\"Size
      of the storage allocated to the notebook persistent storage.\",\"displayName\":\"Storage
      size\",\"name\":\"STORAGE_SIZE\",\"required\":true,\"value\":\"20Gi\"},{\"description\":\"Minimum
      RAM memory available for the application.\",\"displayName\":\"Memory minimum\",\"name\":\"MEMORY_MIN\",\"required\":true,\"value\":\"16Gi\"},{\"description\":\"Minimum
      number of CPUs available for the application.\",\"displayName\":\"CPU minimum\",\"name\":\"CPU_MIN\",\"required\":true,\"value\":\"8\"},{\"description\":\"Maximum
      RAM memory available for the application.\",\"displayName\":\"Memory limit\",\"name\":\"MEMORY_LIMIT\",\"required\":true,\"value\":\"32Gi\"},{\"description\":\"Max
      number of CPUs available for the application.\",\"displayName\":\"CPU limit\",\"name\":\"CPU_LIMIT\",\"required\":true,\"value\":\"16\"}]}\n"
    openshift.io/display-name: Libre Chat
    openshift.io/documentation-url: https://vemonet.github.io/libre-chat
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    tags: chatbot,llm,llama2,chatgpt
  creationTimestamp: "2024-05-17T14:35:29Z"
  name: libre-chat
  namespace: openshift
  resourceVersion: "3128778016"
  uid: 9eebf590-b9cf-422c-9860-d11c879a4703
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: libre-chat
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: true
    tags:
    - from:
        kind: DockerImage
        name: ${APPLICATION_IMAGE}
      importPolicy:
        scheduled: false
      name: latest
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: libre-chat
    name: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${STORAGE_SIZE}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: libre-chat
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel: "true"
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: LIBRECHAT_CONF_URL
            value: ${LIBRECHAT_CONF_URL}
          - name: LIBRECHAT_WORKERS
            value: ${LIBRECHAT_WORKERS}
          failureThreshold: 40
          image: ${APPLICATION_NAME}:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 15
            tcpSocket:
              port: 8000
          name: libre-chat-api
          periodSeconds: 10
          ports:
          - containerPort: 8000
            protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8000
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_MIN}
              memory: ${MEMORY_MIN}
          timeoutSeconds: 2
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /dev/shm
            name: dshm
        runtimeClassName: selinux
        serviceAccountName: anyuid
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}
        - emptyDir:
            medium: Memory
          name: dshm
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - libre-chat-api
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: libre-chat
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8000-tcp
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ""
    port:
      targetPort: 8000-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
parameters:
- description: Must be without spaces (use -), and unique in the project.
  displayName: Name for the application
  name: APPLICATION_NAME
  required: true
  value: libre-chat
- description: Check the description on the right for more details about available
    images
  displayName: Docker image for Libre Chat
  name: APPLICATION_IMAGE
  required: true
  value: ghcr.io/vemonet/libre-chat:main
- description: Checkout the documentation at https://vemonet.github.io/libre-chat
    for more details on how to configure your chatbot
  displayName: Direct URL to the YAML configuration file for the chatbot
  name: LIBRECHAT_CONF_URL
  required: true
  value: https://raw.github.com/vemonet/libre-chat/main/config/chat-conversation.yml
- displayName: Number of workers for the API
  name: LIBRECHAT_WORKERS
  required: true
  value: "4"
- description: Size of the storage allocated to the notebook persistent storage.
  displayName: Storage size
  name: STORAGE_SIZE
  required: true
  value: 20Gi
- description: Minimum RAM memory available for the application.
  displayName: Memory minimum
  name: MEMORY_MIN
  required: true
  value: 16Gi
- description: Minimum number of CPUs available for the application.
  displayName: CPU minimum
  name: CPU_MIN
  required: true
  value: "8"
- description: Maximum RAM memory available for the application.
  displayName: Memory limit
  name: MEMORY_LIMIT
  required: true
  value: 32Gi
- description: Max number of CPUs available for the application.
  displayName: CPU limit
  name: CPU_LIMIT
  required: true
  value: "16"
