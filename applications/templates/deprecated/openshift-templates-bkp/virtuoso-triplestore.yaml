apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: virtuoso-triplestore
metadata:
  annotations:
    description: |-
      Start a OpenLink Virtuoso triplestore, with a SPARQL endpoint

      You can start Virtuoso using 2 different popular images:
      - Official OpenLink Virtuoso image (uses /database to store the data)
      openlink/virtuoso-opensource-7:latest
      - Alternative tenforce/virtuoso image (uses /data to store the data)
      tenforce/virtuoso:latest

      Visit https://github.com/openlink/virtuoso-opensource for more details about the Virtuoso triplestore
      Visit https://hub.docker.com/r/openlink/virtuoso-opensource-7 for more details about the image
      Visit https://github.com/vemonet/virtuoso-ldp to enable the Linked Data Platform feature
    iconClass: icon-kubevirt
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"template.openshift.io/v1","kind":"Template","labels":{"template":"virtuoso-triplestore"},"metadata":{"annotations":{"description":"Start a OpenLink Virtuoso triplestore, with a SPARQL endpoint\n\nYou can start Virtuoso using 2 different popular images:\n- Official OpenLink Virtuoso image (uses /database to store the data)\nopenlink/virtuoso-opensource-7:latest\n- Alternative tenforce/virtuoso image (uses /data to store the data)\ntenforce/virtuoso:latest\n\nVisit https://github.com/openlink/virtuoso-opensource for more details about the Virtuoso triplestore\nVisit https://hub.docker.com/r/openlink/virtuoso-opensource-7 for more details about the image\nVisit https://github.com/vemonet/virtuoso-ldp to enable the Linked Data Platform feature","iconClass":"icon-kubevirt","openshift.io/display-name":"Virtuoso triplestore","openshift.io/documentation-url":"https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-database#start-virtuoso-triplestore","openshift.io/provider-display-name":"Institute of Data Science, UM","openshift.io/support-url":"https://maastrichtu-ids.github.io/dsri-documentation/help","tags":"triplestore,graph,database,rdf,sparql"},"name":"virtuoso-triplestore","namespace":"openshift"},"objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-password":"{.data['application-password']}"},"labels":{"app":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"stringData":{"application-password":"${PASSWORD}"}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"app":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${STORAGE_SIZE}"}}}},{"apiVersion":"image.openshift.io/v1","kind":"ImageStream","metadata":{"labels":{"app":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"lookupPolicy":{"local":true},"tags":[{"from":{"kind":"DockerImage","name":"${APPLICATION_IMAGE}"},"importPolicy":{"scheduled":true},"name":"latest"}]}},{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","metadata":{"labels":{"app":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"app":"${APPLICATION_NAME}","deploymentconfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"annotations":{"io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel":"true"},"labels":{"app":"${APPLICATION_NAME}","deploymentconfig":"${APPLICATION_NAME}"}},"spec":{"automountServiceAccountToken":false,"containers":[{"env":[{"name":"DBA_PASSWORD","valueFrom":{"secretKeyRef":{"key":"application-password","name":"${APPLICATION_NAME}"}}},{"name":"DAV_PASSWORD","valueFrom":{"secretKeyRef":{"key":"application-password","name":"${APPLICATION_NAME}"}}},{"name":"SPARQL_UPDATE","value":"true"},{"name":"DEFAULT_GRAPH","value":"${DEFAULT_GRAPH}"},{"name":"VIRT_Database_ErrorLogLevel","value":"${LOG_LEVEL}"},{"name":"VIRT_SPARQL_ShortenLongURIs","value":"1"},{"name":"VIRT_SPARQL_MaxCacheExpiration","value":"1"},{"name":"VIRT_SPARQL_ExternalQuerySource","value":"1"},{"name":"VIRT_SPARQL_ExternalXsltSource","value":"1"},{"name":"VIRT_SPARQL_ResultSetMaxRows","value":"1048576"},{"name":"VIRT_SPARQL_MaxQueryCostEstimationTime","value":"100000"},{"name":"VIRT_SPARQL_MaxQueryExecutionTime","value":"6000"},{"name":"VIRT_VDB_VDBDisconnectTimeout","value":"7200000"},{"name":"VIRT_Client_SQL_QUERY_TIMEOUT","value":"14400000"},{"name":"VIRT_CLient_SQL_TXN_TIMEOUT","value":"14400000"},{"name":"VIRT_Parameters_Timeout","value":"7200"},{"name":"VIRT_Parameters_TransactionAfterImageLimit","value":"5000000000"},{"name":"VIRT_Parameters_NumberOfBuffers","value":"493674"},{"name":"VIRT_Parameters_TempDBSize","value":"100000000"},{"name":"VIRT_Database_MaxCheckpointRemap","value":"125000"},{"name":"VIRT_TempDatabase_MaxCheckpointRemap","value":"125000"},{"name":"VIRT_URIQA_DefaultHost","value":"${TRIPLESTORE_URL}"}],"image":"${APPLICATION_NAME}:latest","imagePullPolicy":"IfNotPresent","name":"virtuoso-triplestore","ports":[{"containerPort":8890,"protocol":"TCP"},{"containerPort":1111,"protocol":"TCP"}],"resources":{"limits":{"cpu":"32","memory":"200Gi"},"requests":{"cpu":"2","memory":"4Gi"}},"volumeMounts":[{"mountPath":"/database","name":"data"}]}],"runtimeClassName":"selinux","serviceAccountName":"anyuid","volumes":[{"name":"data","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}"}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["virtuoso-triplestore"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"labels":{"app":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"name":"8890-tcp","port":8890,"protocol":"TCP","targetPort":8890}],"selector":{"app":"${APPLICATION_NAME}","deploymentconfig":"${APPLICATION_NAME}"}}},{"apiVersion":"route.openshift.io/v1","kind":"Route","metadata":{"labels":{"app":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"","port":{"targetPort":"8890-tcp"},"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"},"to":{"kind":"Service","name":"${APPLICATION_NAME}","weight":100}}}],"parameters":[{"description":"Must be without spaces (use -), and unique in the project.","displayName":"Application name","name":"APPLICATION_NAME","required":true,"value":"virtuoso"},{"description":"The password of the dba user.","displayName":"Triplestore admin password","name":"PASSWORD","required":true},{"description":"Size of the storage used for the notebook (approximate).","displayName":"Storage size","name":"STORAGE_SIZE","required":true,"value":"10Gi"},{"description":"Docker image to deploy the Virtuoso triplestore","displayName":"Application Docker image","name":"APPLICATION_IMAGE","required":true,"value":"openlink/virtuoso-opensource-7:latest"},{"description":"Change it to /data for the tenforce/virtuoso image","displayName":"The database storage path","name":"DATABASE_PATH","required":true,"value":"/database"},{"description":"The default graph used by the Virtuoso triplestore","displayName":"Triplestore default graph","name":"DEFAULT_GRAPH","required":true,"value":"https://w3id.org/um/graph"},{"description":"Only used to define the URL of data added via the DAV Linked Data Platform","displayName":"URL where the triplestore will be publicly deployed","name":"TRIPLESTORE_URL","required":true,"value":"https://w3id.org/um/data/"},{"description":"Amount of log produced: 0 is minimum, 7 is maximum","displayName":"Triplestore log level","name":"LOG_LEVEL","required":true,"value":"0"}]}
    openshift.io/display-name: Virtuoso triplestore
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-database#start-virtuoso-triplestore
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    tags: triplestore,graph,database,rdf,sparql
  creationTimestamp: "2021-05-27T13:58:52Z"
  name: virtuoso-triplestore
  namespace: openshift
  resourceVersion: "3786755833"
  uid: 173835cf-fb6c-4864-9f2e-fdb875dfea91
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-password: '{.data[''application-password'']}'
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  stringData:
    application-password: ${PASSWORD}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${STORAGE_SIZE}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: true
    tags:
    - from:
        kind: DockerImage
        name: ${APPLICATION_IMAGE}
      importPolicy:
        scheduled: false
      name: latest
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel: "true"
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: DBA_PASSWORD
            valueFrom:
              secretKeyRef:
                key: application-password
                name: ${APPLICATION_NAME}
          - name: DAV_PASSWORD
            valueFrom:
              secretKeyRef:
                key: application-password
                name: ${APPLICATION_NAME}
          - name: SPARQL_UPDATE
            value: "true"
          - name: DEFAULT_GRAPH
            value: ${DEFAULT_GRAPH}
          - name: VIRT_Database_ErrorLogLevel
            value: ${LOG_LEVEL}
          - name: VIRT_SPARQL_ShortenLongURIs
            value: "1"
          - name: VIRT_SPARQL_MaxCacheExpiration
            value: "1"
          - name: VIRT_SPARQL_ExternalQuerySource
            value: "1"
          - name: VIRT_SPARQL_ExternalXsltSource
            value: "1"
          - name: VIRT_SPARQL_ResultSetMaxRows
            value: "1048576"
          - name: VIRT_SPARQL_MaxQueryCostEstimationTime
            value: "100000"
          - name: VIRT_SPARQL_MaxQueryExecutionTime
            value: "6000"
          - name: VIRT_VDB_VDBDisconnectTimeout
            value: "7200000"
          - name: VIRT_Client_SQL_QUERY_TIMEOUT
            value: "14400000"
          - name: VIRT_CLient_SQL_TXN_TIMEOUT
            value: "14400000"
          - name: VIRT_Parameters_Timeout
            value: "7200"
          - name: VIRT_Parameters_TransactionAfterImageLimit
            value: "5000000000"
          - name: VIRT_Parameters_NumberOfBuffers
            value: "493674"
          - name: VIRT_Parameters_TempDBSize
            value: "100000000"
          - name: VIRT_Database_MaxCheckpointRemap
            value: "125000"
          - name: VIRT_TempDatabase_MaxCheckpointRemap
            value: "125000"
          - name: VIRT_URIQA_DefaultHost
            value: ${TRIPLESTORE_URL}
          image: ${APPLICATION_NAME}:latest
          imagePullPolicy: IfNotPresent
          name: virtuoso-triplestore
          ports:
          - containerPort: 8890
            protocol: TCP
          - containerPort: 1111
            protocol: TCP
          resources:
            limits:
              cpu: "32"
              memory: 200Gi
            requests:
              cpu: "2"
              memory: 4Gi
          volumeMounts:
          - mountPath: /database
            name: data
        runtimeClassName: selinux
        serviceAccountName: anyuid
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: false
        containerNames:
        - virtuoso-triplestore
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8890-tcp
      port: 8890
      protocol: TCP
      targetPort: 8890
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ""
    port:
      targetPort: 8890-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
parameters:
- description: Must be without spaces (use -), and unique in the project.
  displayName: Application name
  name: APPLICATION_NAME
  required: true
  value: virtuoso
- description: The password of the dba user.
  displayName: Triplestore admin password
  name: PASSWORD
  required: true
- description: Size of the storage used for the notebook (approximate).
  displayName: Storage size
  name: STORAGE_SIZE
  required: true
  value: 10Gi
- description: Docker image to deploy the Virtuoso triplestore
  displayName: Application Docker image
  name: APPLICATION_IMAGE
  required: true
  value: openlink/virtuoso-opensource-7:latest
- description: Change it to /data for the tenforce/virtuoso image
  displayName: The database storage path
  name: DATABASE_PATH
  required: true
  value: /database
- description: The default graph used by the Virtuoso triplestore
  displayName: Triplestore default graph
  name: DEFAULT_GRAPH
  required: true
  value: https://w3id.org/um/graph
- description: Only used to define the URL of data added via the DAV Linked Data Platform
  displayName: URL where the triplestore will be publicly deployed
  name: TRIPLESTORE_URL
  required: true
  value: https://w3id.org/um/data/
- description: 'Amount of log produced: 0 is minimum, 7 is maximum'
  displayName: Triplestore log level
  name: LOG_LEVEL
  required: true
  value: "0"
