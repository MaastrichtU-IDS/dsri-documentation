apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: ubuntu-root
message: |-
  A Ubuntu pod has been scheduled for creation in your project, and should be soon available.
  Building images takes some minutes to complete, so please be patient. You can follow progress on your projects overview page.

  You can use `oc get pods` to get the pod ID and connect using your local terminal `oc rsh POD_ID`
  Or use the terminal tab in the Ubuntu pod view of the OpenShift web UI
metadata:
  annotations:
    description: "Start Ubuntu Linux (Debian-based) with the 'root' user which has
      sudo permissions to install anything.\nSome basic packages for development have
      been installed: gfortran, git, build-essentials, curl, wget, python3\n\n\U0001F4C2
      Use the `/root` folder (home of the root user) to store your data in the existing
      persistent storage\nYou can find the persistent storage in the DSRI web UI,
      go to Administrator view > Storage > Persistent Volume Claims\n\U0001F517 We
      enabled the port 8080 in the Ubuntu container if you need to deploy applications\n\nImage
      based on official ubuntu image, hosted in the GitHub Container Registry.\nVisit
      https://github.com/MaastrichtU-IDS/ubuntu for more details on the image\nVisit
      original Ubuntu image at https://hub.docker.com/_/ubuntu"
    iconClass: icon-ubuntu
    kubectl.kubernetes.io/last-applied-configuration: "{\"apiVersion\":\"template.openshift.io/v1\",\"kind\":\"Template\",\"labels\":{\"template\":\"ubuntu-root\"},\"message\":\"A
      Ubuntu pod has been scheduled for creation in your project, and should be soon
      available.\\nBuilding images takes some minutes to complete, so please be patient.
      You can follow progress on your projects overview page.\\n\\nYou can use `oc
      get pods` to get the pod ID and connect using your local terminal `oc rsh POD_ID`\\nOr
      use the terminal tab in the Ubuntu pod view of the OpenShift web UI\",\"metadata\":{\"annotations\":{\"description\":\"Start
      Ubuntu Linux (Debian-based) with the 'root' user which has sudo permissions
      to install anything.\\nSome basic packages for development have been installed:
      gfortran, git, build-essentials, curl, wget, python3\\n\\n\U0001F4C2 Use the
      `/root` folder (home of the root user) to store your data in the existing persistent
      storage\\nYou can find the persistent storage in the DSRI web UI, go to Administrator
      view \\u003e Storage \\u003e Persistent Volume Claims\\n\U0001F517 We enabled
      the port 8080 in the Ubuntu container if you need to deploy applications\\n\\nImage
      based on official ubuntu image, hosted in the GitHub Container Registry.\\nVisit
      https://github.com/MaastrichtU-IDS/ubuntu for more details on the image\\nVisit
      original Ubuntu image at https://hub.docker.com/_/ubuntu\",\"iconClass\":\"icon-ubuntu\",\"openshift.io/display-name\":\"Ubuntu\",\"openshift.io/documentation-url\":\"https://maastrichtu-ids.github.io/dsri-documentation/docs/catalog-utilities#ubuntu\",\"openshift.io/provider-display-name\":\"Institute
      of Data Science, UM\",\"openshift.io/support-url\":\"https://maastrichtu-ids.github.io/dsri-documentation/help\",\"tags\":\"ubuntu,root,persistent\"},\"name\":\"ubuntu-root\",\"namespace\":\"openshift\"},\"objects\":[{\"apiVersion\":\"v1\",\"kind\":\"PersistentVolumeClaim\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"accessModes\":[\"ReadWriteMany\"],\"resources\":{\"requests\":{\"storage\":\"${STORAGE_SIZE}\"}}}},{\"apiVersion\":\"image.openshift.io/v1\",\"kind\":\"ImageStream\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"template\":\"ubuntu-root-dynamic\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"lookupPolicy\":{\"local\":true},\"tags\":[{\"from\":{\"kind\":\"DockerImage\",\"name\":\"${APPLICATION_IMAGE}\"},\"name\":\"latest\"}]}},{\"apiVersion\":\"apps.openshift.io/v1\",\"kind\":\"DeploymentConfig\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"replicas\":1,\"selector\":{\"app\":\"${APPLICATION_NAME}\",\"deploymentconfig\":\"${APPLICATION_NAME}\"},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel\":\"true\"},\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"deploymentconfig\":\"${APPLICATION_NAME}\"}},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"command\":[\"tail\",\"-f\",\"/dev/null\"],\"image\":\"${APPLICATION_NAME}:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"ubuntu-container\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"32\",\"memory\":\"200Gi\"},\"requests\":{\"cpu\":\"2\",\"memory\":\"4Gi\"}},\"volumeMounts\":[{\"mountPath\":\"/root\",\"name\":\"data\"},{\"mountPath\":\"/dev/shm\",\"name\":\"dshm\"}]}],\"runtimeClassName\":\"selinux\",\"serviceAccountName\":\"anyuid\",\"volumes\":[{\"name\":\"data\",\"persistentVolumeClaim\":{\"claimName\":\"${APPLICATION_NAME}\"}},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"dshm\"}]}},\"triggers\":[{\"type\":\"ConfigChange\"},{\"imageChangeParams\":{\"automatic\":true,\"containerNames\":[\"ubuntu-container\"],\"from\":{\"kind\":\"ImageStreamTag\",\"name\":\"${APPLICATION_NAME}:latest\"}},\"type\":\"ImageChange\"}]}},{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"ports\":[{\"name\":\"8080-tcp\",\"port\":8080,\"protocol\":\"TCP\",\"targetPort\":8080}],\"selector\":{\"app\":\"${APPLICATION_NAME}\",\"deploymentconfig\":\"${APPLICATION_NAME}\"}}}],\"parameters\":[{\"description\":\"Must
      be without spaces (use -), and unique in the project.\",\"displayName\":\"Application
      name\",\"name\":\"APPLICATION_NAME\",\"required\":true,\"value\":\"ubuntu\"},{\"description\":\"Size
      of the storage used for the notebook (approximate).\",\"displayName\":\"Storage
      size\",\"name\":\"STORAGE_SIZE\",\"required\":true,\"value\":\"10Gi\"},{\"description\":\"See
      https://github.com/MaastrichtU-IDS/ubuntu for more details on the image\",\"displayName\":\"Application
      Docker image\",\"name\":\"APPLICATION_IMAGE\",\"required\":true,\"value\":\"ghcr.io/maastrichtu-ids/ubuntu:latest\"}]}\n"
    openshift.io/display-name: Ubuntu
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/catalog-utilities#ubuntu
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    tags: ubuntu,root,persistent
  creationTimestamp: "2021-05-27T13:58:50Z"
  name: ubuntu-root
  namespace: openshift
  resourceVersion: "3786749998"
  uid: 5e30eb0d-b591-4561-be22-771ecb2d2c8b
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${STORAGE_SIZE}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: ubuntu-root-dynamic
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: true
    tags:
    - from:
        kind: DockerImage
        name: ${APPLICATION_IMAGE}
      name: latest
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel: "true"
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        automountServiceAccountToken: false
        containers:
        - command:
          - tail
          - -f
          - /dev/null
          image: ${APPLICATION_NAME}:latest
          imagePullPolicy: IfNotPresent
          name: ubuntu-container
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "32"
              memory: 200Gi
            requests:
              cpu: "2"
              memory: 4Gi
          volumeMounts:
          - mountPath: /root
            name: data
          - mountPath: /dev/shm
            name: dshm
        runtimeClassName: selinux
        serviceAccountName: anyuid
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}
        - emptyDir:
            medium: Memory
          name: dshm
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: false
        containerNames:
        - ubuntu-container
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
parameters:
- description: Must be without spaces (use -), and unique in the project.
  displayName: Application name
  name: APPLICATION_NAME
  required: true
  value: ubuntu
- description: Size of the storage used for the notebook (approximate).
  displayName: Storage size
  name: STORAGE_SIZE
  required: true
  value: 10Gi
- description: See https://github.com/MaastrichtU-IDS/ubuntu for more details on the
    image
  displayName: Application Docker image
  name: APPLICATION_IMAGE
  required: true
  value: ghcr.io/maastrichtu-ids/ubuntu:latest
