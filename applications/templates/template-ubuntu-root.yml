---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: ubuntu-root-persistent
  annotations:
    openshift.io/display-name: Ubuntu with root user (Persistent)
    description: |-
      Start ubuntu with the 'root' user which has sudo permissions to install anything.

      ðŸ“‚ Use the `/root` folder (home of the root user) to store your data in the existing persistent storage
      You can find the persistent storage in the DSRI web UI, go to Administrator view > Storage > Persistent Volume Claims
      ðŸ”— We enabled the port 8080 in the Ubuntu container if you need to deploy applications
      
      Image based on official ubuntu image, hosted in the GitHub Container Registry.
      Visit https://github.com/MaastrichtU-IDS/ubuntu for more details on the image
      Visit original Ubuntu image at https://hub.docker.com/_/ubuntu

      ðŸ”’ You need root containers enabled (aka. anyuid) in your project to start this application.
    iconClass: icon-ubuntu
    tags: ubuntu,root,persistent
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/catalog-utilities#ubuntu
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    # template.openshift.io/bindable: 'false'
labels:
  template: ubuntu-root-persistent
message: |-
  A Ubuntu pod has been scheduled for creation in your project, and should be soon available.
  Building images takes some minutes to complete, so please be patient. You can follow progress on your projects overview page.

  You can use `oc get pods` to get the pod ID and connect using your local terminal `oc rsh POD_ID`
  Or use the terminal tab in the Ubuntu pod view of the OpenShift web UI
parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: Must be unique in the project. It will be used to generate the application URL
  value: ubuntu-root
  required: true
- name: STORAGE_SIZE
  displayName: Storage size
  description: Size of the storage used for the notebook (approximate).
  value: 10Gi
  required: true
- name: APPLICATION_IMAGE
  displayName: Application Docker image
  description: See https://github.com/MaastrichtU-IDS/ubuntu for more details on the image
  value: ghcr.io/maastrichtu-ids/ubuntu:latest
  required: true

objects:
- apiVersion: "v1"
  kind: "PersistentVolumeClaim"
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    accessModes:
      - "ReadWriteMany"
    resources:
      requests:
        storage: ${STORAGE_SIZE}

- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      template: ubuntu-root-dynamic
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: ${APPLICATION_IMAGE}
      # importPolicy:
      #   scheduled: true
    lookupPolicy:
      local: true

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ubuntu-container
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          deploymentconfig: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: anyuid
        #nodeSelector:
        # dsri.unimaas.nl/cpu: 'true'
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}"
        containers:
        - name: ubuntu-container
          image: ${APPLICATION_NAME}:latest
          command: [ "tail", "-f", "/dev/null"]
          ports:
          - containerPort: 8080
            protocol: TCP
          # resources:
          #   limits:
          #     cpu: '64'
          #     memory: 200Gi
          #   requests:
          #     cpu: '2'
          #     memory: 4Gi
          volumeMounts:
          - name: data
            # mountPath: "/data"
            mountPath: "/root"
        automountServiceAccountToken: false

- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"

# - kind: Route
#   apiVersion: route.openshift.io/v1
#   metadata:
#     name: "${APPLICATION_NAME}"
#     labels:
#       app: "${APPLICATION_NAME}"
#   spec:
#     host: ''
#     to:
#       kind: Service
#       name: "${APPLICATION_NAME}"
#       weight: 100
#     port:
#       targetPort: 8787-tcp
#     tls:
#       termination: edge
#       insecureEdgeTerminationPolicy: Redirect
