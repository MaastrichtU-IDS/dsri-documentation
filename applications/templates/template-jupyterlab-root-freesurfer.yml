---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: jupyterlab-root-freesurfer
  annotations:
    openshift.io/display-name: Freesurfer JupyterLab
    description: |-
      Start JupyterLab images with Neuroscience Freesurfer pre-installed based on the official Docker stack, as the `jovyan` user, with sudo privileges to install anything you need.

      Checkout https://github.com/MaastrichtU-IDS/jupyterlab to see how our custom image is built, and how to extend it
      For more details on the jupyter docker stack, go to https://github.com/jupyter/docker-stacks

      üî• With our ghcr.io/maastrichtu-ids/jupyterlab image you can provide the URL to a git repository which will be cloned in your workspace at the start of JupyterLab.
      If this repo contains files with list of packages in the root folder, they will be installed at start:
      - requirements.txt for pip packages
      - packages.txt for apt packages
      You can use this URL to clone a repository with some examples to use the DSRI:
      https://github.com/MaastrichtU-IDS/dsri-demo

      üìÇ Use the persistent folder in the workspace of the JupyterLab UI (usually /home/jovyan/work/persistent folder) to store your data in the persistent storage automatically created
      You can find the persistent storage in the DSRI web UI, go to Search > Resources > Persistent Volume Claim.

      üì¶ We recommend you to use `conda install` to install new packages, but you can also use `sudo apt-get install` or `pip install`

      üóëÔ∏è Use this command with your application name to delete completely your application and its persistent volumes:
      oc delete all,pvc,secret,configmaps,serviceaccount,rolebinding --selector app=$APPLICATION_NAME
    iconClass: icon-python
    tags: python,jupyter,notebook
    openshift.io/provider-display-name: ICT Service Centre, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-jupyter
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
labels:
  template: jupyterlab-root-freesurfer

parameters:
  - name: APPLICATION_NAME
    displayName: Name for the application
    description: Must be without spaces (use -), and unique in the project.
    value: jupyterlab-freesurfer
    required: true
  - name: APPLICATION_IMAGE
    displayName: Jupyter notebook with Freesurfer Docker image
    description: Check the description on the right for more details about available images
    value: ghcr.io/maastrichtu-ids/jupyterlab:freesurfer
    required: true
  - name: STORAGE_SIZE
    displayName: Storage size
    description: Size of the storage allocated to the notebook persistent storage.
    value: 10Gi
    required: true
  - name: PASSWORD
    displayName: JupyterLab UI Password
    description: The password/token to access the JupyterLab web UI
    required: true
  - name: GIT_URL
    displayName: URL of a git repository to clone in the workspace (optional)
    description: It will be automatically cloned, then requirements.txt and packages.txt will be automatically installed if presents. Only works for images based on the official images
    required: false
  - name: GIT_NAME
    displayName: Git name
    description: Email used to automatically define git config --global user.name
    value: default
    required: true
  - name: GIT_EMAIL
    displayName: Git email
    description: Email used to automatically define git config --global user.email
    value: default@maastrichtuniversity.nl
    required: true

objects:

  - kind: ImageStream
    apiVersion: image.openshift.io/v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
        template: jupyterlab-root-freesurfer
    spec:
      lookupPolicy:
        local: true
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: ${APPLICATION_IMAGE}
          importPolicy:
            scheduled: false


  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
        template: jupyterlab-root-freesurfer
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${STORAGE_SIZE}
      storageClassName: ocs-storagecluster-cephfs


  - kind: Service
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
        template: jupyterlab-root-freesurfer
    spec:
      selector:
        app: "${APPLICATION_NAME}"
      ports:
        - name: "8888-tcp"
          protocol: TCP
          port: 8888
          targetPort: 8888
      type: ClusterIP


  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
        template: jupyterlab-root-freesurfer
    spec:
      to:
        kind: Service
        name: "${APPLICATION_NAME}"
      port:
        targetPort: "8888-tcp"
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect


  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
        template: jupyterlab-root-freesurfer
    stringData:
      application-password: "${PASSWORD}"


  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_NAME}"
        template: jupyterlab-root-freesurfer
    spec:
      replicas: 1
      strategy:
        type: Recreate
      selector:
        matchLabels:
          app: "${APPLICATION_NAME}"
      template:
        metadata:
          annotations:
            io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel: 'true'
          labels:
            app: "${APPLICATION_NAME}"
            deployment: "${APPLICATION_NAME}"
        spec:
          runtimeClassName: selinux
          serviceAccountName: "anyuid"
          automountServiceAccountToken: false
          securityContext:
            runAsUser: 0
            supplementalGroups:
            - 100
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: "${APPLICATION_NAME}"
            - name: dshm
              emptyDir:
                medium: Memory
          containers:
            - name: jupyter-notebook
              image: "${APPLICATION_IMAGE}"
              imagePullPolicy: IfNotPresent
              workingDir: /home/jovyan/work
              ports:
                - containerPort: 8888
                  protocol: TCP
                - containerPort: 4040
                  protocol: TCP
                - containerPort: 4041
                  protocol: TCP
              volumeMounts:
                - name: data
                  mountPath: /home/jovyan/work/persistent
                - name: dshm
                  mountPath: /dev/shm
              env:
                - name: JUPYTER_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: application-password
                      name: "${APPLICATION_NAME}"
                - name: JUPYTER_ENABLE_LAB
                  value: "yes"
                - name: GRANT_SUDO
                  value: "yes"
                - name: GIT_URL
                  value: "${GIT_URL}"
                - name: GIT_NAME
                  value: "${GIT_NAME}"
                - name: GIT_EMAIL
                  value: "${GIT_EMAIL}"
              readinessProbe:
                tcpSocket:
                  port: 8888
              livenessProbe:
                initialDelaySeconds: 15
                tcpSocket:
                  port: 8888
                failureThreshold: 40
                periodSeconds: 10
                timeoutSeconds: 2
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
                limits:
                  cpu: '32'
                  memory: 200Gi```