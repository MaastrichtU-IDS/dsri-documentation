apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: jupyterlab-existing-pvc
metadata:
  annotations:
    description: "Start JupyterLab on an existing Persistent Volume Claim (PVC). It
      is usually the same as the name of the deployment. Find the list of PVC in Search
      > Resources > Persistent Volume Claim.\n\nImages based on the official Docker
      stack, using the `jovyan` user, with sudo privileges to install anything you
      need.\n\n\U0001F4C2 Use the persistent folder in the workspace of the JupyterLab
      UI (/home/jovyan/persistent folder) to store your data in the persistent storage
      automatically created\nYou can find the persistent storage in the DSRI web UI,
      go to Administrator view > Storage > Persistent Volume Claims\n\n\U0001F433
      You can use any image based on the official Jupyter docker stack:\n- ghcr.io/maastrichtu-ids/jupyterlab
      (with VSCode, Java and SPARQL kernels)\n- ghcr.io/maastrichtu-ids/jupyterlab:knowledge-graph
      (with VSCode, Java, SPARQL kernels and KG tools)\n- jupyter/minimal-notebook\n-
      jupyter/scipy-notebook\n- jupyter/datascience-notebook (with Julia kernel)\n-
      jupyter/tensorflow-notebook\n- jupyter/r-notebook\n- jupyter/pyspark-notebook\n-
      jupyter/all-spark-notebook\n- elyra/elyra (extension for Kuberflow pipelines)\n\nCheckout
      https://github.com/MaastrichtU-IDS/jupyterlab to see how our custom image is
      built, and how to extend it\nFor more details on the jupyter docker stack, go
      to https://github.com/jupyter/docker-stacks\n\n\U0001F4E5 With our ghcr.io/maastrichtu-ids/jupyterlab
      image you can provide the URL to a git repository which will be cloned in your
      workspace at the start of JupyterLab. \nIf this repo contains files with list
      of packages in the root folder, they will be installed at start:\n- requirements.txt
      for pip packages\n- packages.txt for apt packages\nYou can use this URL to clone
      a repository with some examples to use the DSRI: \nhttps://github.com/MaastrichtU-IDS/dsri-demo\n\n\U0001F4E6
      We recommend you to use `conda install` to install new packages, but you can
      also use `sudo apt-get install` or `pip install`\n\n\U0001F5D1️ Use this command
      with your application name to delete completely your application and its persistent
      volumes:\noc delete all,pvc,secret,configmaps,serviceaccount,rolebinding --selector
      app=$APPLICATION_NAME"
    iconClass: icon-python
    kubectl.kubernetes.io/last-applied-configuration: "{\"apiVersion\":\"template.openshift.io/v1\",\"kind\":\"Template\",\"labels\":{\"template\":\"jupyterlab-existing-pvc\"},\"metadata\":{\"annotations\":{\"description\":\"Start
      JupyterLab on an existing Persistent Volume Claim (PVC). It is usually the same
      as the name of the deployment. Find the list of PVC in Search \\u003e Resources
      \\u003e Persistent Volume Claim.\\n\\nImages based on the official Docker stack,
      using the `jovyan` user, with sudo privileges to install anything you need.\\n\\n\U0001F4C2
      Use the persistent folder in the workspace of the JupyterLab UI (/home/jovyan/persistent
      folder) to store your data in the persistent storage automatically created\\nYou
      can find the persistent storage in the DSRI web UI, go to Administrator view
      \\u003e Storage \\u003e Persistent Volume Claims\\n\\n\U0001F433 You can use
      any image based on the official Jupyter docker stack:\\n- ghcr.io/maastrichtu-ids/jupyterlab
      (with VSCode, Java and SPARQL kernels)\\n- ghcr.io/maastrichtu-ids/jupyterlab:knowledge-graph
      (with VSCode, Java, SPARQL kernels and KG tools)\\n- jupyter/minimal-notebook\\n-
      jupyter/scipy-notebook\\n- jupyter/datascience-notebook (with Julia kernel)\\n-
      jupyter/tensorflow-notebook\\n- jupyter/r-notebook\\n- jupyter/pyspark-notebook\\n-
      jupyter/all-spark-notebook\\n- elyra/elyra (extension for Kuberflow pipelines)\\n\\nCheckout
      https://github.com/MaastrichtU-IDS/jupyterlab to see how our custom image is
      built, and how to extend it\\nFor more details on the jupyter docker stack,
      go to https://github.com/jupyter/docker-stacks\\n\\n\U0001F4E5 With our ghcr.io/maastrichtu-ids/jupyterlab
      image you can provide the URL to a git repository which will be cloned in your
      workspace at the start of JupyterLab. \\nIf this repo contains files with list
      of packages in the root folder, they will be installed at start:\\n- requirements.txt
      for pip packages\\n- packages.txt for apt packages\\nYou can use this URL to
      clone a repository with some examples to use the DSRI: \\nhttps://github.com/MaastrichtU-IDS/dsri-demo\\n\\n\U0001F4E6
      We recommend you to use `conda install` to install new packages, but you can
      also use `sudo apt-get install` or `pip install`\\n\\n\U0001F5D1️ Use this command
      with your application name to delete completely your application and its persistent
      volumes:\\noc delete all,pvc,secret,configmaps,serviceaccount,rolebinding --selector
      app=$APPLICATION_NAME\",\"iconClass\":\"icon-python\",\"openshift.io/display-name\":\"JupyterLab
      on existing storage\",\"openshift.io/documentation-url\":\"https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-jupyter\",\"openshift.io/provider-display-name\":\"Institute
      of Data Science, UM\",\"openshift.io/support-url\":\"https://maastrichtu-ids.github.io/dsri-documentation/help\",\"tags\":\"python,jupyter,notebook\"},\"name\":\"jupyterlab-existing-pvc\",\"namespace\":\"openshift\"},\"objects\":[{\"apiVersion\":\"image.openshift.io/v1\",\"kind\":\"ImageStream\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"template\":\"jupyterlab-existing-pvc\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"lookupPolicy\":{\"local\":true},\"tags\":[{\"from\":{\"kind\":\"DockerImage\",\"name\":\"${APPLICATION_IMAGE}\"},\"importPolicy\":{\"scheduled\":false},\"name\":\"latest\"}]}},{\"apiVersion\":\"v1\",\"kind\":\"Secret\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"template\":\"jupyterlab-existing-pvc\"},\"name\":\"${APPLICATION_NAME}\"},\"stringData\":{\"application-password\":\"${PASSWORD}\"}},{\"apiVersion\":\"v1\",\"kind\":\"DeploymentConfig\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"template\":\"jupyterlab-existing-pvc\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"replicas\":1,\"selector\":{\"app\":\"${APPLICATION_NAME}\",\"deploymentconfig\":\"${APPLICATION_NAME}\"},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel\":\"true\"},\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"deploymentconfig\":\"${APPLICATION_NAME}\"}},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"env\":[{\"name\":\"JUPYTER_TOKEN\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"application-password\",\"name\":\"${APPLICATION_NAME}\"}}},{\"name\":\"JUPYTER_ENABLE_LAB\",\"value\":\"yes\"},{\"name\":\"GRANT_SUDO\",\"value\":\"yes\"},{\"name\":\"GIT_URL\",\"value\":\"${GIT_URL}\"},{\"name\":\"GIT_NAME\",\"value\":\"${GIT_NAME}\"},{\"name\":\"GIT_EMAIL\",\"value\":\"${GIT_EMAIL}\"}],\"failureThreshold\":40,\"image\":\"${APPLICATION_NAME}:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"initialDelaySeconds\":15,\"tcpSocket\":{\"port\":8888}},\"name\":\"jupyter-notebook\",\"periodSeconds\":10,\"ports\":[{\"containerPort\":8888,\"protocol\":\"TCP\"},{\"containerPort\":4040,\"protocol\":\"TCP\"},{\"containerPort\":4041,\"protocol\":\"TCP\"}],\"readinessProbe\":{\"tcpSocket\":{\"port\":8888}},\"resources\":{\"limits\":{\"cpu\":\"32\",\"memory\":\"200Gi\"},\"requests\":{\"cpu\":\"2\",\"memory\":\"4Gi\"}},\"timeoutSeconds\":2,\"volumeMounts\":[{\"mountPath\":\"/home/jovyan/work/persistent\",\"name\":\"data\"},{\"mountPath\":\"/dev/shm\",\"name\":\"dshm\"}],\"workingDir\":\"/home/jovyan/work\"}],\"runtimeClassname\":\"selinux\",\"securityContext\":{\"runAsUser\":0,\"supplementalGroups\":[100]},\"serviceAccountName\":\"anyuid\",\"volumes\":[{\"name\":\"data\",\"persistentVolumeClaim\":{\"claimName\":\"${PERSISTENT_VOLUME_CLAIM}\"}},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"dshm\"}]}},\"triggers\":[{\"type\":\"ConfigChange\"},{\"imageChangeParams\":{\"automatic\":true,\"containerNames\":[\"jupyter-notebook\"],\"from\":{\"kind\":\"ImageStreamTag\",\"name\":\"${APPLICATION_NAME}:latest\"}},\"type\":\"ImageChange\"}]}},{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\",\"template\":\"jupyterlab-existing-pvc\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"ports\":[{\"name\":\"8888-tcp\",\"port\":8888,\"protocol\":\"TCP\",\"targetPort\":8888}],\"selector\":{\"app\":\"${APPLICATION_NAME}\",\"deploymentconfig\":\"${APPLICATION_NAME}\"},\"type\":\"ClusterIP\"}},{\"apiVersion\":\"v1\",\"kind\":\"Route\",\"metadata\":{\"labels\":{\"app\":\"${APPLICATION_NAME}\"},\"name\":\"${APPLICATION_NAME}\"},\"spec\":{\"host\":\"\",\"port\":{\"targetPort\":\"8888-tcp\"},\"tls\":{\"insecureEdgeTerminationPolicy\":\"Redirect\",\"termination\":\"edge\"},\"to\":{\"kind\":\"Service\",\"name\":\"${APPLICATION_NAME}\",\"weight\":100}}}],\"parameters\":[{\"description\":\"Must
      be without spaces (use -), and unique in the project.\",\"displayName\":\"Name
      for the application\",\"name\":\"APPLICATION_NAME\",\"required\":true,\"value\":\"jupyterlab\"},{\"description\":\"The
      password/token to access the JupyterLab web UI\",\"displayName\":\"JupyterLab
      UI Password\",\"name\":\"PASSWORD\",\"required\":true},{\"description\":\"The
      name of the Persistent Volume Claim to mount to this notebook. It is usually
      the same as the name of the deployment. Find the list in Search \\u003e Resources
      \\u003e Persistent Volume Claim.\",\"displayName\":\"Persistent Volume Claim\",\"name\":\"PERSISTENT_VOLUME_CLAIM\",\"required\":true},{\"description\":\"Check
      the description on the right for more details about available images\",\"displayName\":\"Jupyter
      notebook Docker image\",\"name\":\"APPLICATION_IMAGE\",\"required\":true,\"value\":\"ghcr.io/maastrichtu-ids/jupyterlab:latest\"},{\"description\":\"It
      will be automatically cloned, then requirements.txt and packages.txt will be
      automatically installed if presents. Only works for images based on the official
      images\",\"displayName\":\"URL of a git repository to clone in the workspace
      (optional)\",\"name\":\"GIT_URL\",\"required\":false},{\"description\":\"Email
      used to automatically define git config --global user.name\",\"displayName\":\"Git
      name\",\"name\":\"GIT_NAME\",\"required\":true,\"value\":\"default\"},{\"description\":\"Email
      used to automatically define git config --global user.email\",\"displayName\":\"Git
      email\",\"name\":\"GIT_EMAIL\",\"required\":true,\"value\":\"default@maastrichtuniversity.nl\"}]}\n"
    openshift.io/display-name: JupyterLab on existing storage
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-jupyter
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    tags: python,jupyter,notebook
  creationTimestamp: "2022-06-27T16:14:43Z"
  name: jupyterlab-existing-pvc
  namespace: openshift
  resourceVersion: "3786774410"
  uid: 5265bda4-ff76-4d34-a6a1-785c98d496eb
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: jupyterlab-existing-pvc
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: true
    tags:
    - from:
        kind: DockerImage
        name: ${APPLICATION_IMAGE}
      importPolicy:
        scheduled: false
      name: latest
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: jupyterlab-existing-pvc
    name: ${APPLICATION_NAME}
  stringData:
    application-password: ${PASSWORD}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: jupyterlab-existing-pvc
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          io.kubernetes.cri-o.TrySkipVolumeSELinuxLabel: "true"
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: JUPYTER_TOKEN
            valueFrom:
              secretKeyRef:
                key: application-password
                name: ${APPLICATION_NAME}
          - name: JUPYTER_ENABLE_LAB
            value: "yes"
          - name: GRANT_SUDO
            value: "yes"
          - name: GIT_URL
            value: ${GIT_URL}
          - name: GIT_NAME
            value: ${GIT_NAME}
          - name: GIT_EMAIL
            value: ${GIT_EMAIL}
          failureThreshold: 40
          image: ${APPLICATION_NAME}:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 15
            tcpSocket:
              port: 8888
          name: jupyter-notebook
          periodSeconds: 10
          ports:
          - containerPort: 8888
            protocol: TCP
          - containerPort: 4040
            protocol: TCP
          - containerPort: 4041
            protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8888
          resources:
            limits:
              cpu: "32"
              memory: 200Gi
            requests:
              cpu: "2"
              memory: 4Gi
          timeoutSeconds: 2
          volumeMounts:
          - mountPath: /home/jovyan/work/persistent
            name: data
          - mountPath: /dev/shm
            name: dshm
          workingDir: /home/jovyan/work
        runtimeClassname: selinux
        securityContext:
          runAsUser: 0
          supplementalGroups:
          - 100
        serviceAccountName: anyuid
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ${PERSISTENT_VOLUME_CLAIM}
        - emptyDir:
            medium: Memory
          name: dshm
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: false
        containerNames:
        - jupyter-notebook
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: jupyterlab-existing-pvc
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8888-tcp
      port: 8888
      protocol: TCP
      targetPort: 8888
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ""
    port:
      targetPort: 8888-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
parameters:
- description: Must be without spaces (use -), and unique in the project.
  displayName: Name for the application
  name: APPLICATION_NAME
  required: true
  value: jupyterlab
- description: The password/token to access the JupyterLab web UI
  displayName: JupyterLab UI Password
  name: PASSWORD
  required: true
- description: The name of the Persistent Volume Claim to mount to this notebook.
    It is usually the same as the name of the deployment. Find the list in Search
    > Resources > Persistent Volume Claim.
  displayName: Persistent Volume Claim
  name: PERSISTENT_VOLUME_CLAIM
  required: true
- description: Check the description on the right for more details about available
    images
  displayName: Jupyter notebook Docker image
  name: APPLICATION_IMAGE
  required: true
  value: ghcr.io/maastrichtu-ids/jupyterlab:latest
- description: It will be automatically cloned, then requirements.txt and packages.txt
    will be automatically installed if presents. Only works for images based on the
    official images
  displayName: URL of a git repository to clone in the workspace (optional)
  name: GIT_URL
- description: Email used to automatically define git config --global user.name
  displayName: Git name
  name: GIT_NAME
  required: true
  value: default
- description: Email used to automatically define git config --global user.email
  displayName: Git email
  name: GIT_EMAIL
  required: true
  value: default@maastrichtuniversity.nl
