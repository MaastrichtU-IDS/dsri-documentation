---
kind: Template
apiVersion: template.openshift.io/v1
labels:
  template: gpu-pytorch-vscode
metadata:
  name: gpu-pytorch-vscode
  annotations:
    openshift.io/display-name: PyTorch on GPU with VisualStudio (Persistent)
    description: |-
      Create and deploy VisualStudio Code to run PyTorch using GPUs with the root user.
      
      ðŸ“‚ Use the `/root` folder (workspace of the VSCode UI) to store your data in the existing persistent storage

      ðŸ”’ You need root containers enabled (aka. anyuid) in your project to start this application.
    iconClass: icon-kubevirt
    tags: python,gpu,vscode,ide
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-on-gpu
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    template.openshift.io/bindable: 'false'
parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: Must be unique in the project. It will be used to generate the application
    URL.
  value: gpu-pytorch-vscode
  required: true
- name: PASSWORD
  displayName: VisualStudio password
  description: The password to access VisualStudio Code
  value: mypassword
  required: true
# - name: PASSWORD
#   displayName: Notebook password
#   description: The password of the Jupyter Notebook.
#   from: "[a-zA-Z0-9]{16}"
#   generate: expression
#   required: true
- name: STORAGE_NAME
  displayName: Storage name
  description: Name of the Persistent Volume Claim used for storage.
  value: pvc-mapr-projects-myproject
  required: true
- name: STORAGE_FOLDER
  displayName: Storage folder
  description: Path to the folder used to store your application data in the the Persistent Volume Claim (leave empty to use the root folder of the storage)
  value: gpu-pytorch-vscode
  required: false
- name: GPU_LIMIT
  displayName: Number of GPU assigned
  description: 8 in total in the cluster.
  value: '1'
  required: true
# - name: MEMORY_LIMIT
#   displayName: Memory limit
#   description: Maximum RAM memory available for the application.
#   value: "60Gi"
#   required: true
# - name: CPU_LIMIT
#   displayName: CPU limit
#   description: Number of CPUs available for the application (in millicore, 1 CPU = 1000m).
#   value: "10000m"
#   required: true
objects:

# - apiVersion: v1
#   kind: Secret
#   metadata:
#     annotations:
#       template.openshift.io/expose-password: "{.data['application-password']}"
#     name: "${APPLICATION_NAME}"
#   stringData:
#     application-password: "${PASSWORD}"

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        serviceAccountName: anyuid
        nodeSelector:
          nvidia.com/gpu: 'true'
        containers:
          - image: ghcr.io/maastrichtu-ids/nvidia-gpu-pytorch-vscode:19.11-py3
            command:
              - code-server
              - --bind-addr
              - 0.0.0.0:8081
            imagePullPolicy: IfNotPresent
            name: nvidia-pytorch-gpu-vscode
            resources:
              limits:
                nvidia.com/gpu: '${GPU_LIMIT}'
                # cpu: "${CPU_LIMIT}"
                # memory: "${MEMORY_LIMIT}"
            ports:
              - containerPort: 8080
                protocol: TCP
              - containerPort: 8081
                protocol: TCP
            volumeMounts:
              - name: workdir
                mountPath: /root
                subPath: ${STORAGE_FOLDER}
            env:
              - name: PASSWORD
                value: ${PASSWORD}
              # - name: PASSWORD
              #   valueFrom:
              #     secretKeyRef:
              #       key: application-password
              #       name: "${APPLICATION_NAME}"
        volumes:
          - name: workdir
            persistentVolumeClaim:
              claimName: ${STORAGE_NAME}
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      type: Rolling
    test: false
    triggers:
      - type: ConfigChange


- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8081-tcp
      protocol: TCP
      port: 8081
      targetPort: 8081
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"

- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}-8080"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    host: ''
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    host: ''
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 8081-tcp