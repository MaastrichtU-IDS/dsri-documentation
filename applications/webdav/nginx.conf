user nginx;
worker_processes auto;
error_log /dev/stderr warn;
pid /var/run/nginx.pid;

# Load DAV extension module for PROPFIND and other extended WebDAV methods
load_module /usr/lib/nginx/modules/ngx_http_dav_ext_module.so;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 0;

    server {
        listen 80;
        server_name _;

        # WebDAV root
        location / {
            root /data;

            # Enable basic authentication
            auth_basic "WebDAV Access";
            auth_basic_user_file /etc/nginx/auth/.htpasswd;

            # Disable directory listing
            autoindex off;

            # Enable DAV methods
            dav_methods PUT DELETE MKCOL COPY MOVE;
            dav_ext_methods PROPFIND OPTIONS;

            # Allow creating directories
            create_full_put_path on;

            # Set permissions for uploaded files
            dav_access user:rw group:rw all:r;

            # Increase client body buffer size
            client_body_temp_path /tmp/nginx_client_temp;
            client_max_body_size 0;

            # Allow all origins (CORS)
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, MKCOL, COPY, MOVE, PROPFIND, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;

            # Handle OPTIONS method
            if ($request_method = 'OPTIONS') {
                return 204;
            }

            # Ensure proper handling of depth header for WebDAV
            set $depth_header $http_depth;
            if ($depth_header = '') {
                set $depth_header 'infinity';
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
