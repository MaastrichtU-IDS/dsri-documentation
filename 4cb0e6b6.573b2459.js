(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{127:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(r),d=n,m=u["".concat(s,".").concat(d)]||u[d]||b[d]||o;return r?a.a.createElement(m,c(c({ref:t},p),{},{components:r})):a.a.createElement(m,c({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var p=2;p<o;p++)s[p]=r[p];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},87:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return l}));var n=r(3),a=r(7),o=(r(0),r(127)),s={id:"openshift-secret",title:"Use secrets"},c={unversionedId:"openshift-secret",id:"openshift-secret",isDocsHomePage:!1,title:"Use secrets",description:"Feature still in development, only use it if you know how it works.",source:"@site/docs/openshift-secret.md",slug:"/openshift-secret",permalink:"/dsri-documentation/docs/openshift-secret",editUrl:"https://github.com/MaastrichtU-IDS/dsri-documentation/edit/master/website/docs/openshift-secret.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1607049922,sidebar:"docs",previous:{title:"Publish a Docker image",permalink:"/dsri-documentation/docs/guide-publish-image"},next:{title:"Delete objects (advanced)",permalink:"/dsri-documentation/docs/openshift-delete-objects"}},i=[{value:"Manage Secrets",id:"manage-secrets",children:[]},{value:"Use in Argo workflows",id:"use-in-argo-workflows",children:[]},{value:"Connect to DockerHub",id:"connect-to-dockerhub",children:[]}],p={rightToc:i};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Feature still in development, only use it if you know how it works.")),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.openshift.com/enterprise/3.1/dev_guide/secrets.html"}),"OpenShift secrets")," can be used to store confidential information required when the pods are running (such as passwords)."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://app.dsri.unimaas.nl:8443/"}),"DSRI OpenShift"),". ")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"}," ",Object(o.b)("inlineCode",{parentName:"p"},"Argo")," project > ",Object(o.b)("inlineCode",{parentName:"p"},"Resources")," > ",Object(o.b)("inlineCode",{parentName:"p"},"Secret"))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"Secret Type"),": Generic Secret"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"Secret Name"),": my-password"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"Key"),": password"),Object(o.b)("li",{parentName:"ul"},"Enter the password in the text box ",Object(o.b)("inlineCode",{parentName:"li"},"Clean Value"))),Object(o.b)("p",null,"The secret can now be used in pods. "),Object(o.b)("h2",{id:"manage-secrets"},"Manage Secrets"),Object(o.b)("p",null,"Secrets cannot be read, but they can be changed through the OpenShift UI."),Object(o.b)("h2",{id:"use-in-argo-workflows"},"Use in Argo workflows"),Object(o.b)("p",null,"Example to authenticate to a database to run an update query:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),'- name: d2s-sparql-operations\n  inputs:\n    parameters:\n    - name: sparql-queries-path\n    - name: sparql-input-graph\n    - name: sparql-output-graph\n    - name: sparql-service-url\n    - name: sparql-triplestore-url\n    - name: sparql-triplestore-repository\n    - name: sparql-triplestore-username\n  container:\n    image: maastrichtuids/d2s-sparql-operations:latest\n    args: ["-ep", "{{inputs.parameters.sparql-triplestore-url}}", \n      "-rep", "{{inputs.parameters.sparql-triplestore-repository}}", \n      "-op", "update", "-f", "{{inputs.parameters.sparql-queries-path}}",\n      "-un", "{{inputs.parameters.sparql-triplestore-username}}", \n      "-pw", "{{inputs.parameters.sparql-triplestore-password}}",\n      "-pw", "$SPARQLPASSWORD",  # secret from env\n      "--var-input", "{{inputs.parameters.sparql-input-graph}}",\n      "--var-output", "{{inputs.parameters.sparql-output-graph}}", \n      "--var-service", "{{inputs.parameters.sparql-service-url}}", ]\n    env:\n    - name: PASSWORD\n      valueFrom:\n        secretKeyRef:\n          name: my-password\n          key: password\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Now you can use the secret as environment variable in the workflow definition.")),Object(o.b)("h2",{id:"connect-to-dockerhub"},"Connect to DockerHub"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"To be tested.")),Object(o.b)("p",null,"Create secret to pull private images."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"oc create secret docker-registry docker-hub-secret --docker-server=docker.io --docker-username=your-dockerhub-username --docker-password=your-dockerhub-password --docker-email=your-dockerhub-email\n")))}l.isMDXComponent=!0}}]);